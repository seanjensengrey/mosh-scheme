2009-03-23  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp (enum): Added prefix TAG_ for compatibility on compilation.

        * test/input-output-port.scm (rm): Added rm procedure not using shell command.
                                     (cp): Rewrote cp procedure for Windows.

        * Bignum.h: Fixed __WORDSIZE.

        * scripts/gen-accessors.scm : Added.

        * Object-accessors.h : Added.

        * Now passes all of r6rs-test suite.

        * library.scm (string-titlecase): Fixed string-titlecase.

2009-03-22  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : transcoded-port closes the binary-input-port.

        * lib/mosh/ffi.ss (mosh): Export make-c-function

        * thread_local_alloc.c : applied http://osdir.com/ml/programming.garbage-collection.boehmgc/2008-05/msg00013.html.

2009-03-21  higepon  <higepon@users.sourceforge.jp>

        * ErrorProcedures.h : Renamed TRY -> TRY_WITHOUT_DSTR.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss : Show condition components when error occurs.

        * gc-7.1/configure.ac: Don't enable DONT_ADD_BYTE_AT_END and THREAD_LOCAL_ALLOC in same time.

2009-03-20  higepon  <higepon@users.sourceforge.jp>

        * test/io-error.scm : use (eq? (host-os) 'win32).

        * PortProcedures.cpp (scheme::closePortEx): Use argumentAsPort.

        * Bignum.h (scheme): Fixed toU32 and toS32.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/library-manager.ss : MOSH_GENSYM_PREFIX.

        * scanner.re (Scanner): Fixed the parse of bad string. (thanks to naoya_t)

2009-03-19  higepon  <higepon@users.sourceforge.jp>

        * Patch for build on Windows with VC++ by herumi.

2009-03-18  higepon  <higepon@users.sourceforge.jp>

        * Boehm GC 7.1alpha3 => 7.1

        * TranscodedTextualInputPort.cpp (TranscodedTextualInputPort::getLineNo): Fixed the bug of line number.

        * Object-inl.h (Object::makeCompilerInstruction): Now Mosh works with normal switch/case.

        * Removed getDatumOld

        * Not to use ucs4string::data()

        * Removed unused gc_vector definition.

        * Renamd files and*-let => and-let.

        * r6rs-test-suite : Passes io/port tests.

        * TextualInputPort.cpp (getLine): Fixed the bug of get-line.

        * PortProcedures.cpp : Added TRY/CATCH to put-string.

        * Latin1Codec.cpp (Latin1Codec::getChar): Fixed.

2009-03-17  higepon  <higepon@users.sourceforge.jp>

        * TextualOutputPort.cpp (TextualOutputPort::putDatum): put-datum with inline hex escaped symbol (May be not enough).

        * Reader.y : Accepted reading inline hex escaped symbol.

2009-03-17  kokosabu  <kokosabu@gmail.com>

        * UTF8Codec.cpp : fixed putChar's error-handling.

        * Latin1Codec.cpp : Added encode/decode error-handling.

2009-03-17  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : Added put-datum.

        * StandardOutputPort.h (close): Not to close(stdout).

        * Replace the invalid MACRO names like __SCHEME__ to SCHEME_.(thanks to herumi-san).

        * scheme.h (UC): Force the order of operator L and ##. (thanks to herumi-san).

        * compiler.scm (iform-count-size-upto): Added cond clause for $RECEIVE.

        * library.scm (call-with-bytevector-output-port): Fixed wrong arguments.

        * Fixed bytevector-output-port's positions.

        * Fixed the problems on UTF16.

2009-03-16  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : bytevector->string checks the BOM things.

        * TranscodedTextualInputOutputPort.h : Moved eol-style implmentation from here to Transcoder.cpp.

        * tools/psyntax-r6rs/rev10_to_10/Makefile : MOSH_GENSYM_START=5000.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss (psyntax): Changed file-options to use (rnrs enums).

2009-03-15  higepon  <higepon@users.sourceforge.jp>

        * cprocedures.cpp: We allocate CProcedure Objects after GC_INIT is issued.

        * free-vars.scm : (newline) commented out, since ./mosh test/srfi-misc.scm fails.

2009-03-15  kokosabu  <kokosabu@gmail.com>

        * PortProcedures.cpp : Added newline,
                               Fixed display, write.

2009-03-15  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp : Deleted unused code.

        * ByteArrayBinaryInputPort.cpp : Implmented readBytes, readSome and readAll.

        * ByteArrayBinaryOutputPort.cpp/h : Added for string->bytevector.

2009-03-14  higepon  <higepon@users.sourceforge.jp>

        * Implmented "eol-style" for textual-input-port.

        * Refactoring Transcoder things.

        * Makefile.am : disable-profiler works fine.

2009-03-13  higepon  <higepon@users.sourceforge.jp>

        * Now passes all of (rnrs io simple) tests.

        * PortProcedures.cpp (peek-char): Fixed wrong argument length.

        * library.scm (call-with-output-file): Fixed for mulitple values.

        * Implemented and tested custom-textual-input/output-port.

        * Implemented and tested custom-textual-output-port.

        * test/output-port.scm : Added tests for custom-textual-output-port.

        * test/input-port.scm: Added tests for custom-textual-input-port.

        * Implemented and tested custom-textual-input-port.

        * CustomTextualInputPort.cpp : Added not implemented.

        * CustomBinaryInputOutputPort.cpp : Added <custom-binary-input/output-port>.

        * ErrorProcedures.cpp : Fixed the bug of &i/o-encoding arguments error.

2009-03-12  higepon  <higepon@users.sourceforge.jp>

        * Fixed the bug: Loading serialized librararies causes overwriting current label binding value.
          See compat.ss and http://wiki.monaos.org/pukiwiki.php?Mosh%2FBugs%2Fserialize-library%2Fdebug

2009-03-12  kokosabu  <kokosabu@gmail.com>

        * PortProcedures.cpp : Added put-char.

2009-03-11  higepon  <higepon@users.sourceforge.jp>

        * read.cpp (read_char): u_int32_t => uint32_t. (Thanks to antonio.vieiro).

2009-03-10  higepon  <higepon@users.sourceforge.jp>

        * <string-port> returns native-transcoder.

2009-03-09  higepon  <higepon@users.sourceforge.jp>

        * i/o-read and i/o-write can be raised.

        * open-xxx can raise i/o-file-is-read-only and i/o-file-protection.

        * PortProcedures.cpp : (set-port-position! port position) can raise i/o-invalid-position-error.

        * doc/html/images : Added for documents.

        * We found a bug on serialize-library, we will fix it later.

        * scripts/scmc2fasl.scm (main): Added sanity-check.

        * scripts/binary2c.scm : Set (buffer-mode none). We may have buffering problem.

2009-03-08  kokosabu  <kokosabu@gmail.com>

        * Passed all of file-options pattern tests for output-port.

2009-03-07  higepon  <higepon@users.sourceforge.jp>

        * UTF8Codec.cpp (in): Now (utf-16-codec) raises &i/o-decoding.

        * Added time macro to (mosh) library.

        * bench/run-mosh.scm: Added. Thanks to naoya_t.

        * UtilityProcedures.cpp : Added time-usage. Thanks to naoya_t.

        * lib/mosh/process.ss : Added time macro. Thanks to naoya_t.

        * UTF8Codec.cpp (in): Now (utf-8-codec) raises &i/o-decoding.

        * test/io-error.scm: Added.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss (condition-printer): Changed to print parent fields.

2009-03-05  higepon  <higepon@users.sourceforge.jp>

        * Passed all of file-options pattern tests for input/output-port.

        * configure.ac: Fixed message for GNU MP.

2009-03-04  higepon  <higepon@users.sourceforge.jp>

        * test/input-output-port.scm : Writing (file-options) tests

        * textual-input/output-port passes all tests.

2009-03-03  higepon  <higepon@users.sourceforge.jp>

        * Added textual-input/output-port not TESTed.

        * TranscodedTextualInputOutputPort.h : Added.

        * TranscodedTextualOutputPort.h : Added.

        * TranscodedTextualInputPort.h : Added.

2009-03-02  higepon  <higepon@users.sourceforge.jp>

        * FileBinaryInputOutputPort.cpp (FileBinaryInputOutputPort::readFromFile): Added.

        * BlockBufferedFileBinaryInputOutputPort.h : Added.

        * LineBufferedFileBinaryInputOutputPort.h : Added.

        * Makefile.am (test): Added test/input-output-port.scm to Makefile.asm

        * BufferedFileBinaryInputOutputPort.cpp (BufferedFileBinaryInputOutputPort): Passes all tests in input-output-port.scm

2009-02-27  higepon  <higepon@users.sourceforge.jp>

        * test/input-output-port.scm : Just passed simple tests.

2009-02-26  higepon  <higepon@users.sourceforge.jp>

        * ProcedureMacro.h : I found a dangerous reinterpret_cast<BinaryInputOutputPort*>. This doesn' work.

2009-02-25  kokosabu  <kokosabu@gmail.com>

        * Added : output-port-buffer-mode.

2009-02-25  higepon  <higepon@users.sourceforge.jp>

        * test/input-output-port.scm : Added.

2009-02-24  higepon  <higepon@users.sourceforge.jp>

        * BufferedFileBinaryInputOutputPort.cpp (BufferedFileBinaryInputOutputPort::fillBuffer): Added some implementations.

2009-02-23  kokosabu  <kokosabu@gmail.com>

        * Added BlockBufferedBinaryOutputPort.h,
                LineBufferedBinaryOutputPort.h,
                StandardErrorOutputPort.h

2009-02-23  higepon  <higepon@users.sourceforge.jp>

        * BufferedFileBinaryInputOutputPort.cpp : Added (Not implemented yet).

        * Added tests for call-with-port.

        * Added peek-char and tests.

        * Moved close() from BinarInputPort to Port Class.

        * test/input-port.scm : Added tests for (get-line textual-input-port).

2009-02-22  higepon  <higepon@users.sourceforge.jp>

        * Added get-datum. get-datum and read raise &lexical and &i/o-read when error occurs.

        * PortProcedures.cpp : Added get-bytevector-all, get-string-n! and get-string-all.

        * PortProcedures.cpp : Added get-bytevector-some.

2009-02-22  kokosabu  <kokosabu@gmail.com>

        * BufferedFileBinaryOutputPort.cpp : Added.

        * BufferedFileBinaryInputPort.cpp : Fixed getU8.

2009-02-21  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : Added get-bytevector-n!.

        * BufferedFileBinaryInputPort.cpp : position things works.

2009-02-21  kokosabu  <kokosabu@gmail.com>

        * Added: put-string.

        * Fixed: put-bytevector.

2009-02-21  higepon  <higepon@users.sourceforge.jp>

        * BufferedFileBinaryInputPort.cpp : position things doesn't work yet.

        * test/input-port.scm : FileBinaryInputPort (None-buffering)  passes tests.

        * BufferedFileBinaryInputPort.cpp : Added.

        * test/input-port.scm : Added tests for file-binary-input-port on positions and buffering.

2009-02-20  higepon  <higepon@users.sourceforge.jp>

        * Passes all of string-output-port tests.

        * test/output-port.scm: Adde tests for string-output-port. Now it fails, so commented them out.

        * test/input-port.scm : Added tests for textual-input-port (position things).

        * test/output-port.scm : Added tests for textual-output-port (position things).

        * configure.ac (CFLAGS): O2 => O3.

        * PortProcedures.cpp (transcodedPortEx): Accept binary output also.

        * ProcessProcedures.cpp : Issue 45 in mosh-scheme: spawned process is still alive even when a command is not found by leque.
        When in calling spawn, exevp fails, we should terminated the forked process.

2009-02-20  kokosabu  <kokosabu@gmail.com>

        * Added: make-custom-textual-input-port, make-custom-textual-output-port, put-u8,
                 flush-output-port.

2009-02-20  higepon  <higepon@users.sourceforge.jp>

        * Now profiler is broken. It will be fixed soon.

        * Gloc.h: Added for Global location object. It makes top-level variable lookup much faster.
                  Thanks to shiro kawai for advising me.

2009-02-19  kokosabu  <kokosabu@gmail.com>

        * CustomBinaryOutputPort.cpp : Added.

2009-02-19  higepon  <higepon@users.sourceforge.jp>

        * Now string-input-port supports port-position.

        * StandardOutputPort.h : Added. stdout/stderr doesn't support port-position.

        * StandardInputPort.h : Added. stdin doesn't support port-position.

        * test/input-port.scm : Passes all of the custom binary input port. Yey!.

        * CustomBinaryInputPort.cpp : Added get-bytevector-n for custom-binary-input-port.

2009-02-18  higepon  <higepon@users.sourceforge.jp>

        * Added port-has-set-port-position!?.

        * PortProcedures.cpp : Added port-has-port-position?. It works only for custom-binary-input-port only now.

        * Object.h (scheme): Added toPort().

        * Added : Port.h and BinaryPort.h

        * Changed Port inheritance.

        * Added open-bytevector-input-port.

        * test/input-port.scm: Added tests for (utf-16-codec).

        * lib/mosh/test.ss (mosh): Fixed the bug.

        * test/input-port.scm: Added for tests of Input ports.

        * Added port-eof?.

2009-02-17  higepon  <higepon@users.sourceforge.jp>

        * fileno() => fileNo(). fileno() member function causes compile error on FreeBSD.

        * lib/srfi/%3a98/os-environment-variables.sls (srfi): Added.

2009-02-15  higepon  <higepon@users.sourceforge.jp>

        * Wrote : README and AUTHORS.

        * Arithmetic.cpp (Arithmetic::sin): Make it faster.

        * Enabled following options for GC. These options makes mosh very faster.
          AC_DEFINE(DONT_ADD_BYTE_AT_END)
          AC_DEFINE(LARGE_CONFIG)

          (let loop ([i 0])
            (if (= i 10000000)
              '()
               (begin (vector 1 2 3)
               (loop (+ i 1)))))

        * Object-inl.h (Object::makeObjectArray): Inlined.

        * Vector.h (Vector::Vector): Inlined Constructor for better performance.

        * VM-Run.cpp : Added VECTOR instruction for (vector ...). For better performance.

2009-02-14  higepon  <higepon@users.sourceforge.jp>

        * NUMBER_MUL : Make shortcut for Real-valued multiply.

        * Inlined Object::makeFlonum().

        * lib/core/r5rs.scm: Rewrote quotient, remainder and modulo in C++ for better performance.

2009-02-13  higepon  <higepon@users.sourceforge.jp>

        * bench/aobench.ss: Added for flonum aritmetic operations.

2009-02-12  higepon  <higepon@users.sourceforge.jp>

        * Object-inl.h (Object::isNil): Force to use Immediate value.

        * Not to use isNumber before calling Arithmetic::op*. It causes slow arithmetic.

2009-02-10  higepon  <higepon@users.sourceforge.jp>

        * Added : msse, msse2, msse3 and fpmath=sse for some processors.

        * configure.ac: Added OSX Core2 Duo check.

2009-02-09  higepon  <higepon@users.sourceforge.jp>

        * doc/text/srfi.txt (Title): Added document for SRFIs.

2009-02-08  higepon  <higepon@users.sourceforge.jp>

        * configure.ac: Added -march.

2009-02-07  higepon  <higepon@users.sourceforge.jp>

        * Size reduction srfi 0, 1, 11, 13 and 14.

        * scripts/only-maker.ss : Added.

        * library.scm (show-profile): Make up profiler results. (ungensym things.)

2009-02-07  kokosabu  <kokosabu@gmail.com>

        * PortProcedures.cpp : Added transcoder-codec, transcoder-eol-style,
                                     transcoder-error-handling-mode.

2009-02-06  higepon  <higepon@users.sourceforge.jp>

        * Use Derick Eddington's SRFIs.
        (srfi :0 cond-expand)
        (srfi :1 lists)
        (srfi :2 and-let*)
        (srfi :6 basic-string-ports)
        (srfi :8 receive)
        (srfi :9 records)
        (srfi :11 let-values)
        (srfi :13 strings)
        (srfi :14 char-sets)
        (srfi :16 case-lambda)
        (srfi :19 time)
        (srfi :23 error)
        (srfi :26 cut)
        (srfi :27 random-bits)
        (srfi :31 rec)
        (srfi :37 args-fold)
        (srfi :38 with-shared-structure)
        (srfi :39 parameters)
        (srfi :41 streams)
        (srfi :42 eager-comprehensions)
        (srfi :43 vectors)
        (srfi :48 intermediate-format-strings)
        (srfi :61 cond)
        (srfi :67 compare-procedures)
        (srfi :78 lightweight-testing)
        (srfi :98)

        * PortProcedures.cpp : Adde write-char for srfi-48.

        * lib/srfi/sync_mosh.sh: Added for sync.

        * SRFIs: Following SRFIs are tested and installed.
                 0, 1, 8, 9, 11, 13, 14, 16, 19, 23, 39.

        * test/srfi-misc.scm : Added srfi tests.

        * Added : new srfi system.

        * FileBinaryOutputPort.cpp (putByteVector): Added.

        * Fixed : (exact 154) => 154(ratnum) is wrong.

2009-02-05  higepon  <higepon@users.sourceforge.jp>

        * FileBinaryOutputPort.cpp (FileBinaryOutputPort::bufFlush): Added some ASSERTs.

        * lib/srfi/%3A1.ss: Added SRFI-1.

        * Check and remove g++ warnigs.

        * Renamed (srfi :1) to (mosh srfi :1).
                  This is temporary. We will add (srfi :1) library to lib/srfi soon.

        * Added (host-os) and (library-path) to library (mosh).

        * lib/srfi/%3A41.ss: Added SRFI-41.

        * lib/srfi/%3A38.ss: Added SRFI-39.

        * lib/srfi/%3A38.ss: Added SRFI-38.

        * lib/srfi/%3A28.ss: Added SRFI-28.

        * lib/srfi/%3A27.ss: Added SRFI-27 ported from Ypsilon Scheme.

2009-02-04  kokosabu  <kokosabug@gmail.com>

        * PortProcedures.cpp: Added native-transcoder.

2009-02-04  higepon  <higepon@users.sourceforge.jp>

        * test-data.scm (try-ffi): Improved tests of ffi not to raise some errors thanks to mjt.

        * configure.ac: Fixed copiler opt flags thanks to mjt.

        * Makefile.am (libffitest.so.1.0): gcc -> $(CC) thanks to mjt.

        * psyntax/compat.ss : Now loading serialized library become much faster.
                              We precompiled the invoke code and the visit code both on serialization phase.

2009-02-03  higepon  <higepon@users.sourceforge.jp>

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss (psyntax): Not to use cache rib. It is not fast and make fasl file much larger.

2009-02-03  kokosabu  <kokosabu@gmail.com>

        * putDatum : Added write of Transcoder.

2009-02-03  higepon  <higepon@users.sourceforge.jp>

        * FileBinaryInputPort.cpp (bufRead1) : Added for specialized case.

        * lib/srfi/%3A14.ss : Added srfi 13 and 14 ported from Ypsilon Scheme. (Thanks to y.fujita)

2009-02-02  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/control.ss : Added begin0 and let1.

        * lib/mosh/ffi.ss (find-shared-libray): Added.

        * lib/mosh/control.ss : Added (mosh control) and aif.

        * FFI.cpp : Added double support for x86-64.

2009-02-01  higepon  <higepon@users.sourceforge.jp>

        * configure.ac: Added --enable-developer flag default No.
                        Mosh Developer *should* enable this.

        * Makefile.am (install-data-hook): Now we pre-compile R6RS libraries on installation.

        * mosh_config: Added.

        * lib/mosh/config.ss.in (mosh): Added (mosh config) library and document.

2009-01-31  higepon  <higepon@users.sourceforge.jp>

        * Allow fixnum argument to double argument (thanks to id:mjt.)

        * lib/mosh/ffi.ss : Added double/flonum support to FFI system.(IA32).

        * RecordProcedures.cpp (scheme::makeRecordTypeDescriptorEx): Fixed the sealed bug. Thanks to leque(Issue 44).

2009-01-30  higepon  <higepon@users.sourceforge.jp>

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss : Fixed the bug of (raise 1). Thanks to leque(Issue 42).

        * scripts/gen-doc-from-r6rs.scm : R6RS document.

2009-01-30  kokosabu  <kokosabu@gmail.com>

        * PortProcedures.cpp: Added port-transcoder.

2009-01-30  higepon  <higepon@users.sourceforge.jp>

        * scripts/gen-doc-from-r6rs.scm : Added for generating document for R6RS.

2009-01-29  higepon  <higepon@users.sourceforge.jp>

        * doc/text/srfi-98.txt: Wrote document for srfi-98.

        * lib/mosh/process.ss: Wrote document for process management.

        * doc/text/Download.txt.in : Wrote document for download and install.

2009-01-28  higepon  <higepon@users.sourceforge.jp>

        * doc/text/About.txt : Wrote document titled "About".

        * Wrote document for Database Independent Interface.

        * Wrote document for Pretty Printing.

        * Wrote document for Unit Testing.

2009-01-27  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/test.ss (mosh): Improved test showing results.

2009-01-27  kokosabu  <kokosabu@gmail.com>

        * PortProcedures.cpp : Added port?, textual-port?.

2009-01-26  higepon  <higepon@users.sourceforge.jp>

        * Added dbi-getter and dbi-result->list.

        * lib/dbi.ss: added dbi-connect, dbi-execute and dbi-prepare.

2009-01-23  higepon  <higepon@users.sourceforge.jp>

        * dbi: Added dbi.ss library and tests. (They are empty now).

        * test/clos.scm : Added test for Tiny CLOS.

2009-01-22  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : Added output-port?.

        * test/mysql.scm: Added test for mysql library.

        * Added configure option --with-mysql
        ./configure --with-mysql=/usr/lib/libmysqlclient.so.15

        * lib/mysql.ss (libmysqlclient): Completed.

2009-01-21  higepon  <higepon@users.sourceforge.jp>

    * FFIProcedures.cpp (callStub): Now FFI works on X86-64 Linux yeah!.

    * ffitest.c: Added add8 for x86-64.

        * Now Mosh works on PS3 gentoo Linux.(See http://d.hatena.ne.jp/mjt/20090121/p3 )

2009-01-20  kokosabu  <kokosabu@gmail.com>

        * FileBinaryOutputPort.cpp: Implemented buffer mode.

2009-01-20  higepon  <higepon@users.sourceforge.jp>

        * Now Mosh works on x86-64 Linux.

        * Added %ffi-supporeted? procedure.

        * FFIProcedures.cpp : Disabled ffi procedure when not IA32.

        * configure.ac: Added architecture check.

        * Bignum.h : Added code for 64bit.

        * scheme.h: Fixed the size bug of ucs4char. It causes crash on Linux 64bit.

2009-01-19  kokosabu <kokosabu@gmail.com>

        * Changed: file buffer size.

2009-01-18  higepon  <higepon@users.sourceforge.jp>

        * lib/mysql.ss : Added mysql library. It's not enough yet.

        * lib/mosh/ffi.ss (stub-ht): Added mapping (char* . ,%ffi-call->string-or-zero).

        * Added %ffi-call->string-or-zero.

2008-01-18  kokosabu  <kokosabu@gmail.como>

        * FileBinaryOutputPort.cpp: Implemented block mode.

2009-01-17  higepon  <higepon@users.sourceforge.jp>

        * test/ffi.scm (libmysqlclient): check the return value of mysql-real-connect.

2009-01-17  kokosabu  <kokosabu@gmail.com>

        * FileBinaryInputPort.cpp: Added buffer mode.

2009-01-15  higepon  <higepon@users.sourceforge.jp>

        * ObjectTest.cpp: Added for testing "Base system" of Mosh.

        * Makefile.am (test): Renamed some tests.
          (nobase_data_DATA): Added pp.ss to installed files.

        * test/ffi.scm : Added tests for FFI API.

        * lib/mosh/test.ss : Fixed a buf when NG.

        * lib/mosh/ffi.ss : Added.

        * test-data.scm (let*): Added test for %ffi-pointer-ref and %ffi-pointer->string.

2009-01-14  higepon  <higepon@users.sourceforge.jp>

        * Bignum.h (scheme): Fixed conversion things.

2009-01-13  higepon  <higepon@users.sourceforge.jp>

        * FFIProcedures.cpp: Use intptr_t instead of uint64_t.

        * Bignum.h (scheme): Added for compatibility.

        * configure.ac : On OSX don't use -shared option use -dynamiclib option instread.

2009-01-12  higepon  <higepon@users.sourceforge.jp>

        * Added %ffi-call->void.

        * FFITest.cpp (TEST_F): Added test for FFI ByteVector.

        * FFI.cpp (CStack::push): Added char* support to FFI.

2009-01-11  higepon  <higepon@users.sourceforge.jp>

        * FFITest.cpp : Added Test for pushing Fixnum to CStack.

        * FFIProcedures.cpp : Added %ffi-open and %ffi-lookup.

        * FFITest.cpp : Added.

        * FFI.cpp: Added for Foreign Function Interface.

        * Makefile.am (noinst_LTLIBRARIES): Added libffitest.la for test.

2009-01-10  higepon  <higepon@users.sourceforge.jp>

        * test-data.scm : Added some datum comment tests.

        * Reader.y (datum): Fixed "Issue 36: double datum comment causes error" pointed out by leque.
                            Thanks to SaitoAtsushi for the patch.

2008-01-08  kokosabu  <kokosabu@gmail.com>

        * Changed: get-bytevector-u(file).

2009-01-09  higepon  <higepon@users.sourceforge.jp>

        * shell: Added.

        * lib/mosh/shell/repl.ss: Added Shell REPL.

        * lib/mosh/shell.ss : Added Shell script library.

        * VM(parent) ignores SIGINT, child use default handler for SIGINT.

        * lib/mosh/shell.scm : Added -> and $->. Works like following ($-> ls (grep cpp) (grep main)).

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss: don't use (make-cache-rib).

2008-01-08  kokosabu  <kokosabu@gmail.com>

        * Added: lookahead-u8(file, bytearray, custom).

2009-01-08  higepon  <higepon@users.sourceforge.jp>

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss : Set library-path to absolute.

        * library.scm (expand-path): Added expand-path.

        * ProcessProcedures.cpp (setCurrentDirectoryDEx): Added set-current-directory!.

        * lib/mosh/shell.scm: Added spawn and spawn->string.

2009-01-07  higepon  <higepon@users.sourceforge.jp>

        * library.scm (%spawn): Added %spawn.

        * PortProcedures.cpp : Added input-port? and binary-port?.

        * FileBinaryOutputPort.cpp (FileBinaryOutputPort): Not to use FILE*, use fileno instead.

        * ProcessProcedures.cpp (internalPipeEx): Added %pipe procedure.

        * VM.cpp (values2): Added for shortcut.

        * %exec takes more arguments.

        * BinaryInputPort.h : Added fileno() function.

        * BinaryOutputPort.h : Added fileno() function.

        * FileBinaryInputPort.cpp (FileBinaryInputPort): fileno_ -> filno()

2009-01-06  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass2/const-inliner): Fixed invalid const-inliner.(thanks mrc.mgg)

2009-01-06  kokosabu  <kokosabu@gmail.com>

        * FileBinaryInputPort: stream to file descriptor.

2009-01-06  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/pp.scm (mosh): Added (mosh pp) library.

        * Added %exec. Not *Tested* yet.

        * ProcessProcedures.cpp (internalForkEx): Added %fork procedure.
                             (internalWaitpidEx): Added %waitpid procedure.

        * ProcessProcedures.cpp.h: Added.

2009-01-05  kokosabu  <kokosabu@gmail.com>

        * Fixed: fxdiv, fxmod, fxdiv0, fxmod0.

        * Makefile.am: '/usr/local/bin/re2c' to 're2c'.

2009-01-05  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/shell.scm (shell-utilities): Added (experimental).

        * scanner.re (Scanner): Allow '-xx' identifier for shell mode.

2009-01-04  higepon  <higepon@users.sourceforge.jp>

        * test/srfi-19-test-suite.scm: Added test for srfi-19.

        * lib/srfi/%3A19.ss (srfi): Added srfi-19 support.

        * UtilityProcedures.cpp (microsecondEx): Added microsecond procedure.
                              (localTzOffsetEx): Added local-tz-offset.

2009-01-03  higepon  <higepon@users.sourceforge.jp>

        * main.cpp (main): Added --loadpath option.

        * Added .mosh.sls prefix file loading.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss : Use MOSH_LOADPATH for adding load-library-path.

        * When a port is not referenced by any objects, it will be closed automatically.

        * TestingFileBinaryOutputPort.h : Test for closing port automatically.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss (guard-macro): Allowed definition in guard body.

2009-01-02  higepon  <higepon@users.sourceforge.jp>

        * Makefile.am : Added R6RS pre-compilation support!.

        * FaslTest.cpp (TEST_F): Added write/read support of EqvHashTable.

        * Fasl.h (scheme): Added write/read support of Record.

        * FaslTest.cpp (TEST_F): Added Test for writing Records. Yeah it's test first.

2009-01-01  higepon  <higepon@users.sourceforge.jp>

        * Changed libtool to 2.2.6a.

        * PortProcedures.cpp (standardErrorPortEx): Added.
                             (standardOutputPortEx): Added.

        * test-data.scm : Added with-input-from-file tests.

        * TestingSignalHandler.cpp (signal_handler): Added stub for test.

2008-12-31  higepon  <higepon@users.sourceforge.jp>

        * TestPort.cpp: Added for Testing port.

        * Makefile.am (mosh_LDADD): Added libmosh.a support.
                                    It decreases the build dependency.

        * StringTextualOutputPort.h (scheme): Break dependency.

        * Arithmetic.cpp (numberToString): Break dependency.

2008-12-30  higepon  <higepon@users.sourceforge.jp>

        * scheme.h (MOSH_FATAL): Added.

        * main.cpp (main): We break the theVM global variable dependencies! Yey!.

        * TestVM.cpp (TEST_F): Added StackTrace3 test.

        * VM.cpp (VM::mayBeStackPointer): Added.

2008-12-29  higepon  <higepon@users.sourceforge.jp>

        * VM-Run.cpp (run): Added for breaking build dependencies.

        * VM-Profiler.cpp: Added for breaking build dependencies.

2008-12-28  higepon  <higepon@users.sourceforge.jp>

        * Added gtest-1.2.1 for testsing.

        * TestVector.cpp (TEST): Added.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/main.ss (repl): REPL now accepts mulitple lines.

2008-12-27  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp (getStackTrace): Safe stack trace.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss: Disabled extract-trace which is not used.

2008-12-26  higepon  <higepon@users.sourceforge.jp>

        * Passed all of eval tests of R6RS test suite.

        * VM.cpp (evalAfter): Added new eval System. It needs refactoring.

        * compiler.scm (compile-w/o-halt): Adde for new eval.

2008-12-25  higepon  <higepon@users.sourceforge.jp>

        * scanner.re (scan): Fixed nested comment. Thanks to leque.
                     (scan): Fixed #!r6rs comment style.
                     (Scanner::scan): Added DELMITER support.

        * Passed all of conditions tests of R6RS test suite.

        * tools/psyntax-r6rs/rev10_to_10/psyntax-buildscript-mosh.ss (identifier->library-map): Added i/o-error-position

        * Passed all of R5RS compatibility tests of R6RS test suite.

        * tools/psyntax-r6rs/rev10_to_10/psyntax-buildscript-mosh.ss (identifier->library-map): Added ne,se to definition of '=>'.

        * test-data.scm (read-write-invariant?): Added some tests.

        * TextualOutputPort.cpp (putDatum): Fixed write of #\nul. (Thanks to leque).
                                (putDatum): Added write of #\vtab.
                                (putDatum): Fixed write of strings which include "\a".

        * Passed all of reader tests of R6RS test suite.

        * r6rs-test-suite/Makefile: Added reader test.

        * scanner.re (Scanner::scan): Fixed reader of number. It needed delimiter, but now not necessary.

2008-12-24  higepon  <higepon@users.sourceforge.jp>

        * TextualOutputPort.cpp (putDatum): Fixed. In some situation Flonum write buffer is not enough.

        * library.scm (char-general-category): Fixed wrong usage of integer->char.

        * ucs4string.h : Added isValidScalar(). It checks whether integer value is valid Unicode scalar or not.

        * VM.cpp (getStackTrace): Improved stack trace.

2008-12-23  higepon  <higepon@users.sourceforge.jp>

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss (guard-macro): Fixed.

        * VM.cpp (VM::run): Added LOCAL_CALL instruction for better performance.

2008-12-21  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (errorf): Defined for compatibility.

        * EqvHashTable.cpp : Modiffied to eqv-hashtable.

        * lib/core/hashtable.scm (make-eqv-hashtable): Added for bug fix.

        * Makefile.am: Merged branch/pass2define-bug to trunk.

        * call.inc.cpp: Added for better performance. (L1 cache miss)

2008-12-20  higepon  <higepon@users.sourceforge.jp>

        * Added checking index out of range vector-set! and vector-ref.

        * Use NUMBER_ADD instead of NUMBER_SUB on some situation.

        * instruction.scm: Removed some compound instruction.

2008-12-19  higepon  <higepon@users.sourceforge.jp>

        * Fasl.h (scheme): Changed data structure for better performance.

        * VM-inl.h (pop): Added pop();

        * (define-insn VECTOR_REF_PUSH 0)
        * (define-insn REFER_LOCAL_CALL 2)

        * tools/psyntax-r6rs/rev10_to_10/psyntax/library-manager.ss (psyntax): Added fast-equal?.

        * Fasl.h (scheme): Changed Fasl for Instruction. It fits 8 bit.

        * Added (define-insn REFER_FREE_CALL 2)
        * Added (define-insn REFER_GLOBAL_PUSH 1)
        * Added (define-insn REFER_LOCAL_VECTOR_REF 1)
        * Added (define-insn REFER_LOCAL_VECTOR_SET 1)
        * Added (define-insn PUSH_CONSTANT_VECTOR_SET 1)

2008-12-18  higepon  <higepon@users.sourceforge.jp>

        * Removed some compound instructions.

        * Added (define-insn REFER_LOCAL_BRANCH_NOT_LT 2).

        * Added (define-insn REFER_LOCAL_BRANCH_NOT_NULL 2).

        * Added (define-insn REFER_LOCAL_PUSH_CONSTANT_BRANCH_NOT_LE 3)
                (define-insn REFER_LOCAL_PUSH_CONSTANT_BRANCH_NOT_GE 3)
                (define-insn REFER_LOCAL_PUSH_CONSTANT_BRANCH_NOT_NUMBER_EQUAL 3)

        * Added graph.

2008-12-18  kokosabu  <kokosabu@gmail.com>

        * Added: utf-16-codec.

        * Added: latin-1-codec.


2008-12-17  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp (run): Removed NUMBER_LE_TEST and REFER_LOCAL0_EQV_TEST.

        * CompilerProcedures.cpp (pass4FixupLabel): Added peep hole optimization for instructions below.

        * VM.cpp : Added new Instructions BRANCH_NOT_(LE|LT|GE|GT).
                   Added BRANCH_NOT_NULL, BRANCH_NOT_NUMBER_EQUAL, BRANCH_NOT_EQ, BRANCH_NOT_EQV and BRANCH_NOT_EQUAL.

2008-12-17  kokosabu  <kokosabu@gmail.com>

        * Added: buffer-mode?.

2008-12-16  higepon  <higepon@users.sourceforge.jp>

        * CodeBuilder.cpp (CodeBuilder::combineInstructionsArgument1): Enabled REFER_GLOBAL_CALL.

2008-12-16  kokosabu  <kokosabu@gmail.com>

        * Added: <buffer-mode symbol>, <error-handling-mode symbol>.


2008-12-15  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/$if): Omit the jump after then clause.
                       (pass2/$if): Omit "if" when (if const then else) appears.
                       (pass3/$if): (if a b #f) => (if a b IT).

2008-12-14  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (parse-lambda-vars): Return values.
                       (lambda-has-define?): Rewrote.
                       (pass1/cond->iform): Added cond expansion.
                       (pass2/$if): Ported pass2/$if from Gauche.

        * Removed library support which is not used.

2008-12-14  kokosabu  <kokosabu@gmail.com>

        * EolStyle.h: Removed.

        * Added: native-eol-style.

        * config.sub: Added.

        * config.guess: Added.

2008-12-13  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass1/call): Fixed tail? flag for arguments of $call.
                       (pass3/$if): optimization for (if (not x) a b) => (if x b a).

        * VM.cpp (VM_ASSERT): Added VM_ASSERT. It shows dc and cl register.

        * CompilerProcedures.cpp (findSetsLabel): Fixed findSets for searching in $LABEL.

        * compiler.scm : Fixed pass3/find-sets for searching in $LABEL.

2008-12-12  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/$receive): Fixed the bug of counting depth of vals clause.
                       (pass1/receive): Fixed wrong tail? flag.

2008-12-11  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/$call): Fixed the bug for nested name loop.

2008-12-09  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp (disasmEx): disasm works.

2008-12-08  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp (scheme::disasmEx): Added disasm, but it doesn't work yet!

        * VM.cpp (dumpCompiledCode): Added for debug.

        * scripts/gen-insn.scm (print-to-string): Added generation of toSourceString().

        * compiler.scm (pass1/sexp->iform): Fixed wrong tail? flag for cons and values.

2008-12-07  kokosabu  <kokosabu@gmail.com>

        * Symbol.cpp, Symbol.h: Added <eol-style symbol>.

        * EolStyle.h: Added.

2008-12-07  higepon  <higepon@users.sourceforge.jp>

        * library.scm (with-input-from-file): Fixed for multiple values. (thx leque)

        * CompilerProcedures.cpp (scheme::labelEx): Added visited.

        * vm.scm (VM): Fixed the error check of SHIFTJ.

        * compiler.scm (define-pass2/tracable): Added for debug.
                       (pass3/$label): Added visited? check.

2008-12-06  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass2/collect-call): Added an opportunity of varialbe renaming.
                                 (pp-iform): Added code for $RECEIVE node.

2008-12-05  higepon  <higepon@users.sourceforge.jp>

        * Fixed optimization bug. Rewrote pass2/optimize-local-ref, pass2/remove-vars and pass2/$let.

2008-12-04  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm : pass2/$label to pass2/dispatch-table.

        * compiler.scm : Fixed: pass1/asm-1-arg passes wrong "tail?" flag to later process.
                        (pass2/classify-local-ref-call): Fixed for set-count != 0 condition.

2008-12-03  higepon  <higepon@users.sourceforge.jp>

        * Makefile.am: ./mosh => mosh.

        * VM.cpp (VM::run): Added SHIFTJ Instruction.

        * compiler.scm: Fixed the bug of embedded/jump optimization which is across the let boundary.
                        See the comment on pass3/$call.

2008-12-01  higepon  <higepon@users.sourceforge.jp>

        * tail-context => #t when starting compilation.

        * compiler.scm (iform-copy-zip-lvs): Fixed the bug of miss copying of $lambda.lvars.ref-count.
                                             See http://d.hatena.ne.jp/higepon/20081201/1228113798.

2008-11-30  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (imap): Adde inlinable map.

        * tools/psyntax-r6rs/rev10_to_10/Makefile (all): Added normal mode and rescue mode.

2008-11-29  higepon  <higepon@users.sourceforge.jp>

        * example/affine.scm : Added.

        * Psyntax pass through the and/or to backend.

2008-11-28  higepon  <higepon@users.sourceforge.jp>

        * lib/lambda/wiki.ss: Applied a patch by xsloader.

        * CompilerProcedures.cpp (pass4FixupLabel): Added peephole-optimization for VM on C++.

        * compiler.scm: Added peephole-optimization for VM on gauche.

2008-11-27  higepon  <higepon@users.sourceforge.jp>

        * scripts/bench2.scm: Added.

        * lib/mosh/condition.ss : Changed see https://ironscheme.svn.codeplex.com/svn/IronScheme/IronSchemeConsole/build/conditions.ss
                                  and https://bugs.launchpad.net/ikarus/+bug/302023.

2008-11-26  higepon  <higepon@users.sourceforge.jp>

        * Added : make-promise, delay and force.

        * tools/psyntax-r6rs/rev10_to_10/psyntax/internal.ss (psyntax): Tuning.

        * Added: tiny clos.

2008-11-26  kokosabu  <kokosabu@gmail.com>

        * Implemented All of procedures defined in R6RS lib 11.2 Fixnums.

2008-11-25  higepon  <higepon@users.sourceforge.jp>

        * Flonum.h : Fixed dereferencing type-punned pointer will break strict-aliasing rules.

        * lib/core/r5rs.scm: Added R5RS comppatible procedures.

        * Passed all of base tests of R6RS test suite.

        * VM.cpp (run): Fixed the bug when continuation is called without argument.

        * Added: COMPILE_ERROR instruction for error detection of letrec.

2008-11-25  kokosabu  <kokosabu@gmail.com>

        * Added : fxbit-count, fxlength, fxfirst-bit-set, fxbit-set?, fxcopy-bit, fxbit-field,
                  fxcopy-bit-field, fxarithmetic-shift, fxarithmetic-shift-left, fxarithmetic-shift-right,
                  fxrotate-bit-field, fxreverse-bit-field.

        * Fixed : fx-.

2008-11-24  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass1/letrec): Added uninitialized value detection.

        * Fixed error procedure.

        * Fixed integer->char bug.

        * Added string-copy and string-for-each.

        * Fixnum.cpp (Fixnum::integerDiv): Fixed the bug.
                                           The result of integerDiv can be Bignum,
                                           So use Bignum::makeInteger().

        * Fixed (/ 0.000 0) => +inf.0.

        * Fixed (sqrt -5).

        * NumberReader.y (naninf): Fixed imag-part of +inf.

        * Fixed : string=? for arguments length >= 3.

        * Improved : write and display of compound-condition and record.

        * Added symbol=?, boolean=?.

2008-11-23  higepon  <higepon@users.sourceforge.jp>

        * Fixed 1e10 style read for decimal.

        * lib/mosh/condition.ss : Added &no-nans and &no-infinities.

        * Passed all of syntax-case tests of R6RS test suite.

        * Passed all of flonums tests of R6RS test suite.

        * Passed all of bitwise tests of R6RS test suite.

        * Bignum.h : Fixed the bug of bitwise-length when number is negative.

        * Added: number->string.

        * Rewrote: real-part and imag-part.

        * Added: make-rectangular, make-polar, angle and magnitude.

        * Rewrote: expt for Complex numbers.

2008-11-23  kokosabu  <kokosabu@gmail.com>

        * Added : fx+/carry, fx-/carry, fx*/carry, fxnot, fxand, fxior, fxxor, fxif.

2008-11-22  higepon  <higepon@users.sourceforge.jp>

        * lib/core/base.scm (exact-integer-sqrt): Added.

        * Added asin, acos for Complex number.

        * Rewrote sqrt for Complex number.

        * Added angle procedure and tests.

        * Added test for magnitude.

2008-11-22  kokosabu  <kokosabu@gmail.com>

        * Added : fx-, fxdiv-and-mod, fxdiv, fxmod, fxdiv0-and-mod0, fxdiv0, fxmod0.

        * Fixnum.h : fixed BITS.

2008-11-21  kokosabu  <kokosabu@gmail.com>

        * Added : fix*.

        * Fixnum.h : fixed MAX.

        * Makefile.am : fix sed option.

2008-11-21  higepon  <higepon@users.sourceforge.jp>

        * Rewrote string->number.

        * NumberScanner.re Fixed a heavy bug. It can distinguish between "1e2" and "#xe3".

2008-11-20  higepon  <higepon@users.sourceforge.jp>

        * Added : cos ,sin and tan.

        * Flonum.h : Added isNegativeZero().
                     This can distinguish between 0.0 and -0.0.

        * Added : log.

2008-11-20  kokosabu  <kokosabu@gmail.com>

        * Added : fx+.

2008-11-19  higepon  <higepon@users.sourceforge.jp>

        * Added : exp

        * Added : ratinalize originally from Ypsilon Scheme.

        * Fasl.cpp : Added Flonum support.

2008-11-19  kokosabu  <kokosabu@gmail.com>

        * Added : fxmax, fxmin.

2008-11-18  higepon  <higepon@users.sourceforge.jp>

        * Added : floor, ceiling, round and truncate.

        * Rewrote : denominator and numerator.

        * Added : gcd and lcm.

        * Rewrote : odd?, +, -, *, /, abs, div, mod, div0, mod0, div-and-mod div0-and-mod0.

2008-11-18  kokosabu  <kokosabu@gmail.com>

        * Added : fxzero?, fxpositive?, fxnegative?, fxodd?, fxeven?.

2008-11-17  higepon  <higepon@users.sourceforge.jp>

        * Rewrote even? for new numeric tower.

        * lib/srfi/%3A26.ss (srfi): Added srfi :26.

        * Implemented R6RS ByteVectors.

        * ArithmeticProcedures.cpp : Added magnitude.

        * Added : Fixnum.cpp

        * lib/core/bytevector.scm : Added bytevector-uint-ref, bytevector-sint-ref, bytevector-uint-set!
                                          bytevector-sint-set!, bytevector->uint-list, bytevector->sint-list
                                          uint-list->bytevector and sint-list->bytevector.

        * Added: bytevector-ieee-single-ref, bytevector-ieee-double-ref,
                 bytevector-ieee-single-set!, bytevector-ieee-double-set!,
                 bytevector-ieee-single-native-set! and bytevector-ieee-double-native-set!.

2008-11-16  higepon  <higepon@users.sourceforge.jp>

        * Added: bytevector-ieee-single-native-ref and bytevector-ieee-double-native-ref.

        * Modified bytevector 64bit ref/set! procedures using new numeric tower.

        * Reading all kind of numbers works fine.

        * NumberReader.y: Implemented read8 / read16.

        * compiler.scm (pass1/asm-n-args): Fixed (- obj) quotation bug.

2008-11-16  kokosabu  <kokosabu@gmail.com>

        * Added : fx>?, fx<?, fx>=?, fx<=?.

2008-11-15  higepon  <higepon@users.sourceforge.jp>

        * fixed suffix bug of read number.

        * reading number10 works fine(Almost). But it needs more and more tests.

2008-11-15  kokosabu  <kokosabu@gmail.com>

        * FixnumProcedures.cpp, FixnumProcedures.h : Added.

        * Added : fx=?.

2008-11-14  higepon  <higepon@users.sourceforge.jp>

        * Added read of 10. +nan.0, +inf.0, 2/3

        * ByteVectorProcedures.cpp (bytevectorU32NativeRefEx): Fixed for Bignum.

        * Makefile.am (mosh_CFLAGS): Changed -O3 => -O2. Because it causes miss compilation of NumberReader.tab.cpp with g++ 4.1.3.

2008-11-13  kokosabu  <kokosabu@gmail.com>

        * Fixed max, min.

2008-11-13  higepon  <higepon@users.sourceforge.jp>

        * Implemented all of reading number2.

        * Added read of #i#b-01 style.

        * Added read of #i#b01 style.

        * Added read of #b01 style.

2008-11-12  higepon  <higepon@users.sourceforge.jp>

        * NumberScanner.re : Added.

        * NumberReader.y: Added.

2008-11-11  higepon  <higepon@users.sourceforge.jp>

        * Added : complex?, real?, integer?, real-valued?, rational-valued? adn integer-valued?.

        * Implemented All of procedures defined in R6RS lib 11.4 Exact bitwise arithmetic.

        * Added : bitwise-arithmetic-shift-right, bitwise-arithmetic-shift.

2008-11-10  higepon  <higepon@users.sourceforge.jp>

        * Added : bitwise-arithmetic-shift-left.

        * Added : bitwise-not, bitwise-and, bitwise-ior, bitwise-xor, bitwise-bit-count
                  bitwise-length, bitwise-first-bit-set and bitwise-if.

        * lib/core/flonum.scm, lib/core/bitwise.scm: Added.

        * lib/core: Added. We place base library here.

        * BitwiseProcedures.cpp/.h: Added.

2008-11-09  higepon  <higepon@users.sourceforge.jp>

        * Implemented All of procedures defined in R6RS lib 11.3 Flonums.

        * Added : fldiv, flmod, fldiv-and-mod, fldiv0, flmod0, fldiv0-and-mod0
                  flnumerator, fldenominator, flfloor, flceiling, fltruncate, flround
                  flexp, fllog, flsin, flcos, fltan, flasin, flacos, flatan, flsqrt
                  flexpt and fixnum->flonum.

2008-11-08  higepon  <higepon@users.sourceforge.jp>

        * Added : flabs.

        * scripts/gen-cproc.scm (proc-name->c-proc-name): Added special case for fl/ and fl-.

        * Added fl=?, fl>?, fl>=?, fl<?, fl<=?, real->flonum, flodd?, fleven?
                flfinite?, flinfinite?, flnan?, flmax, flmin, fl+, fl-, fl*, fl/.

        * test-data.scm : Added definition syntax. You can pre-define something necessary for test.

        * Added : denominator and numerator.

2008-11-07  higepon  <higepon@users.sourceforge.jp>

        * Added : nan?, finite? and infinite?

        * Flonum.h : Added isNan.

        * Added positive? and negative?

        * Added exact.

        * Added exact? and inexact?

        * VM.cpp : Check max-stack on LET_FRAME. If stack overflows, expand it.

        * compiler.scm: Added max-stack operand to LET_FRAME.

2008-11-05  higepon  <higepon@users.sourceforge.jp>

        * Implemented : Complex number normalization.

        * Implemented  +, -, *, /, >, >=, <, <=, = between Compnum and (Rational, Fixnum ,Flonum, Bignum and Compnum).

        * vm.cpp (setAfterTrigger1): Fixed stack bug.

2008-11-04  higepon  <higepon@users.sourceforge.jp>

        * Implemented = between Compnum and Compnum.

        * scripts/gen-test.scm: Changed for showing progress.

2008-11-03  higepon  <higepon@users.sourceforge.jp>

        * Compnum.h : Added.

        * Added normalization of Ratnum.

        * Added normalization of Bignum.

        * ArithmeticProcedures.h : Added fixnum?, fixnum-width, least-fixnum and greatest-fixnum.

        * Implemented +, -, *, /, >, >=, <, <=, = between Bignum and (Rational, Fixnum ,Flonum and Bignum).

        * Added Bignum.

2008-11-02  higepon  <higepon@users.sourceforge.jp>

        * Implemented +, -, *, /, >, >=, <, <=, = between Flonum and (Rational, Fixnum and Flonum).

        * Fixnum.h: Added Fixnum utility functions.

        * Added: (inexact ...).

        * Flonum.h: Added Flonum.

2008-11-01  higepon  <higepon@users.sourceforge.jp>

        * Arithmetic.cpp : Implemented +, -, *, /, >, >=, <, <=, = between Fixnum and Rational.

        * Rational.h : Added.

        * configure.ac: Added GMP lib check.

2008-10-31  higepon  <higepon@users.sourceforge.jp>

        * 0.0.7 released.

2008-10-30  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp (statMtimeEx): Added stat-mtime.

        * scripts/pre-compile-r6rs.scm: Added.

2008-10-29  higepon  <higepon@users.sourceforge.jp>

        * tools/psyntax-r6rs/rev10_to_10/psyntax/expander.ss (psyntax): Updated to newest version which is found on IronScheme.

2008-10-28  higepon  <higepon@users.sourceforge.jp>

        * Remove -b option. It becomes default behavior of Mosh.

        * VM.cpp (getStackTrace): Fixed the getStackTrace() bug.

        * PortProcedures.cpp (getStringNEx): Added get-string-n.

2008-10-27  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (cput-shift!): Cut off (SHIFT n m) instruction when m == 0.
                       (pass3/let-frame-size): Added.

        * VM.cpp (VM::expandStack): Added auto stack expansion when stack is overflow.

2008-10-25  higepon  <higepon@users.sourceforge.jp>

        * complation of Mosh and loading speed becomes much Faster with Fasl.

        * Changed the way to precompile and load psyntax "embeded way" to "fasl embeded way".

        * VM.cpp : Changed top-level prefix for making it valid symbol.

        * TextualOutputPort.cpp (TextualOutputPort::putDatum): Fixed the bug of writing compiler-insn.

2008-10-24  higepon  <higepon@users.sourceforge.jp>

        * scripts/binary2c.scm (main): Added for Fasl.

        * PortProcedures.cpp (getU8Ex): Fixed the EOF bug.
                     (openInputFileEx): Added open-input-file.

        * library.scm (condition-printer): Fixed the double fault bug.

        * UtilityProcedures.cpp (makeInstructionEx): Added make-compiler-instruction and make-instruction.

        * reader.y : Not to use append for terrible bad performance.

        * scripts/binary2c.scm (main): Added for Fasl.

2008-10-23  higepon  <higepon@users.sourceforge.jp>

        * Fasl.cpp : Added for Fast loading.

2008-10-21  higepon  <higepon@users.sourceforge.jp>

        * library.scm (show-profile): Fixed profiler SEGV.

        * VM.cpp (VM::run): Fixed the bug of REFER_GLOBAL_CALL.

        * Equivalent.h (scheme): Fixed bug of equality of Record.

        * lib/srfi/%3A98.ss (srfi): Added srfi 98 support.

        * R6RS interactive REPL works well.
               : (import ...) on REPL works well also.

        * UtilityProcedures.cpp (unGenSym): Added.

        * UtilityProcedures.h: rename freeproc.h to UtilityProcedures.h.

2008-10-20  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp : Removed "set! to unbound variable" check on ASSIGN_GLOBAL for psyntax.

        * library.scm (call-with-port): Added call-with-port.

        * PortProcedures.cpp (getLineEx): Added get-line.

2008-10-19  higepon  <higepon@users.sourceforge.jp>

        * ByteVectorProcedures.cpp : Added utf16->string and string->utf16.

        * ByteVectorProcedures.cpp : Added utf32->string and string->utf32.

        * UTF16Codec.h : Added.

        * UTF16Codec.cpp : Added.

        * UTF32Codec.h : Added.

        * UTF32Codec.cpp : Added.

        * ByteVectorProcedures.cpp : Added string->utf8.

2008-10-18  higepon  <higepon@users.sourceforge.jp>

        * ErrorProcedures.cpp (throwIOError): Added for Codec Error.

        * Added: bytevector->string and string->bytevector.

2008-10-16  higepon  <higepon@users.sourceforge.jp>

        * Added: bytevector-u64-native-ref, bytevector-s64-native-ref
               , bytevector-u64-native-set! ,bytevector-s64-native-set!
               , bytevector-u64-ref, bytevector-s64-ref
               , bytevector-u64-set! and bytevector-s64-set!.

        * Added: bytevector-u32-native-ref, bytevector-s32-native-ref
               , bytevector-u32-native-set! ,bytevector-s32-native-set!
               , bytevector-u32-ref, bytevector-s32-ref
               , bytevector-u32-set! and bytevector-s32-set!.

        * Added: bytevector-u16-native-ref, bytevector-s16-native-ref
               , bytevector-u16-native-set! and bytevector-s16-native-set!.

        * ByteVectorProcedures.cpp (scheme::bytevectorU16RefEx): Added bytevector-u16-ref.

2008-10-15  higepon  <higepon@users.sourceforge.jp>

        * ByteVectorProcedures.cpp (bytevectorEqPEx): Added bytevector=?.
                                   (bytevectorFillDEx): Added bytevector-fill!.
                                   (bytevectorCopyDEx): Added bytevector-copy!.
                                   (bytevectorCopyEx): Added bytevector-copy.
                                   : Added bytevector-u8-set!, bytevector-u8-ref, bytevector-s8-ref and bytevector-s8-set!.
                                   (u8ListToByteVector): Added u8-list->bytevector and bytevector->u8-list.

        * ByteVector.h (equal): Added.

        * ByteVectorProcedures.cpp (makeBytevectorEx): Added make-bytevector.

        * Equivalent.cpp (equal): Added bytevector compare.

        * ByteVectorProcedures.cpp (nativeEndiannessEx): Added native-endianness.

        * ByteVectorProcedures.h: Added.

        * ByteVectorProcedures.cpp: Added.

2008-10-14  higepon  <higepon@users.sourceforge.jp>

        * main.cpp (main): Added debug-expand mode which shows me the result of psyntax expansion.

        * Makefile.am (test): Added library-load path functions.

        * lib/srfi/%3A8.ss: Added srfi-8 support for R6RS.

        * Makefile.am (nobase_data_DATA): Added installation of srfi/%3A8.ss

2008-10-13  higepon  <higepon@users.sourceforge.jp>

        * PortProcedures.cpp : Added current-directory and standard-library-path.

2008-10-12  higepon  <higepon@users.sourceforge.jp>

        * Addes psyntax/rev0_to10 directory.

        * Added let*-values,

        * Added case-lambda.

        * Added source information to psyntax error message.

        * r6rs-examples/psyntax.scm: Added newest version rev 10 of psyntax.

        * scripts/gen-pre-compiled-faster-cpp.scm (collect-list): Added dot-pair support for (collect-list '(((#(scheme-id else) any . each-any)))).

        * library.scm (case-lambda): Added case-lambda.

2008-10-10  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp (run): Added kind message for wrong number arguments.

2008-10-09  higepon  <higepon@users.sourceforge.jp>

        * library.scm (vector-map): Fixed bug.

        * ListProcedures.cpp : (length p) raise error when (not (list? p)).

2008-10-07  higepon  <higepon@users.sourceforge.jp>

        * Scanner.cpp: Added #xff style number.

        * scanner.re (Scanner): RADIX_16.

        * ByteVector.h (scheme): Modified assert.

        * reader.y (RIGHT_PAREN): Added bytevector check.

2008-10-05  higepon  <higepon@users.sourceforge.jp>

        * Closure.cpp (Closure::sourceInfoString): Fixed SEGV when there is no source location information.

2008-10-03  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp (bytevectorPEx): Added bytevector?.

2008-10-02  higepon  <higepon@users.sourceforge.jp>

        * test-data.scm: Added a test for new string style.

        * reader.cpp (readString): Added "hoge \ ... style string support.

        * scanner.re (scan): Added "hoge \ ... style string support.

2008-10-01  higepon  <higepon@users.sourceforge.jp>

        * Implemented all of Unicode procedures.

        * lib/mosh/unicode.ss: Added string-normalize-nfc and string-normalize-nfkc.

        * unicode/make-composition-exclusions-datum.scm : Added.

2008-09-30  higepon  <higepon@users.sourceforge.jp>

        * ArithmeticProcedures.cpp (scheme::minEx):
                                   (scheme::maxEx): Fixed bug.

        * lib/mosh/unicode.ss (string-normalize-nfd): Added.
                              (string-normalize-nfkd): Added.

2008-09-29  higepon  <higepon@users.sourceforge.jp>

        * library.scm (hashtable-for-each): Added.
                               (substring): Added.

        * unicode/make-canonical-decompose-datum.scm : Added.

2008-09-27  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/unicode.ss (string-ci=?, string-ci<?, string-ci>?)
                              (string-ci<=?): Added.

        * library.scm (string-compare, string<?, string>?, string<=?)
                      (string>=?): Added.

        * lib/mosh/unicode.ss (string-upcase, string-foldcase)
                              (string-downcase): Added.

                              (string-titlecase): Added from Ypsilon Scheme System.

2008-09-26  higepon  <higepon@users.sourceforge.jp>

        * TextualInputPort.cpp (hasPortPosition, hasSetPortPosition)
                               (portPosition, setPortPostion): Added.

        * Added lookahead-char procedure.

        * TextualInputPort.cpp (lookaheadChar): Added.

2008-09-25  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/unicode.ss : Added char-whitespace?, char-alphabetic?, char-upper-case?,
                                      char-lower-case?, char-title-case?, char-numeric?
                                      and char-general-category.

        * unicode/make-other-lowercase-property-datum.scm (main): Added.

        * unicode/make-other-uppercase-property-datum.scm (main): Added.

        * unicode/make-whitespace-property-datum.scm (main): Added.

        * unicode/make-other-alphabetic-datum.scm: Added for parsing PropList.txt.

2008-09-24  higepon  <higepon@users.sourceforge.jp>

        * lib/mosh/unicode.ss : Added char-ci=?, char-ci>=?, char-ci<=?, char-ci<? and char-ci>?.

        * lib/mosh/unicode.ss : Added char-upcase, char-downcase, char-titlecase and char-foldcase.

2008-09-23  higepon  <higepon@users.sourceforge.jp>

        * Makefile.am (MAINTAINERCLEANFILES): Added for faster compilation.

        * scanner.re (scan): Added DECIMAL_10 to UREAL_10.

        * lib/srfi/8.ss (internal-srfi-8): Addes srfi-8 (receive ...).

        * lib/mosh/unicode.ss (mosh): Added char-upcase/char-downcase.

2008-09-22  higepon  <higepon@users.sourceforge.jp>

        * StringProcedures.cpp (stringTonumberEx): Added base argument support.

2008-09-18  higepon  <higepon@users.sourceforge.jp>

        * scanner.re (currentToken): Replaced (read) to newer one which use re2c. It is much faster than it was.

        * Scanner.h (scheme): Fixed a GC bug.
                              I forgot to set super class of Scanner to gc.

2008-09-16  higepon  <higepon@users.sourceforge.jp>

        * ScannerHelper.cpp : Added.

        * test/reader.scm: Added for testing reader.

2008-09-15  higepon  <higepon@users.sourceforge.jp>

        * scanner.re (class ScannerHelper): Added new scanner using re2c.

2008-09-13  higepon  <higepon@users.sourceforge.jp>

        * reader.lex (): Added read #\x41 style character.

        * reader.cpp (read): Now we use new read supported by Flex/Bison.

2008-09-12  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp (pass4FixupLabelCollect): Fixed wrong type cast.

        * Object.h (DECL_TO): Added assert for wrong type cast.

        * ErrorProcedures.cpp (raiseAfter): Fixed the bug of type.

2008-09-07  higepon  <higepon@users.sourceforge.jp>

        * UTF8Codec.cpp (readWholeString): Added.

2008-09-06  higepon  <higepon@users.sourceforge.jp>

        * Object-inl.h : Break all compilation dependencies.

2008-09-04  higepon  <higepon@users.sourceforge.jp>

        * reader.lex : Added.

        * reader.y : Added for new reader.

2008-09-01  higepon  <higepon@users.sourceforge.jp>

        * example/grass.scm (parse): Applied a patch by IRIE Shinsuke.

2008-08-29  higepon  <higepon@users.sourceforge.jp>

        * library.scm (list-sort): Ported R6RS sorting from Ypsilon Scheme System by Y.FUJITA, LittleWing Company.

2008-08-28  higepon  <higepon@users.sourceforge.jp>

        * 0.0.6 released.

2008-08-26  higepon  <higepon@users.sourceforge.jp>

        * library.scm (newline): fixed bug of (newline).

        * Rewrote error system for reader.

        * ErrorProcedures.cpp (scheme::callLexicalViolationAfter): Added.

        * read.cpp (read_bytevector): Added read bytevector support.

2008-08-24  higepon  <higepon@users.sourceforge.jp>

        * library.scm: Implmented all of R6RS Enumrations.

        * read.cpp (Scm_StringToNumber): Fixed reader bug.

2008-08-23  higepon  <higepon@users.sourceforge.jp>

        * library.scm : Implmented all of R6RS List utilities.

        * VM.cpp (VM::run): Fixed cal/cc for multiple values.

        * ArithmeticProcedures.cpp : Added max and min.

        * library.scm: Added partition, for-all, null*? and exists.

        * ArithmeticProcedures.cpp: Added.

2008-08-22  higepon  <higepon@users.sourceforge.jp>

        * psyntax.cpp (getBuiltinPsyntax): We now precompiled psyntax. It's load speed become much faster.

        * BuiltinSymbols.cpp : Improved for faster compilation for g++.

2008-08-20  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (tag?): Fixed the bug. use equal? instead of =.

        * scripts/gen-pre-compiled-faster-cpp.scm :
          Improved compilation speed for compiler.cpp, match.cpp.

        * Makefile.am (match.scmc): Improved compile time of match.scm -> match.cpp -> libmatch.a

2008-08-19  higepon  <higepon@users.sourceforge.jp>

        * Equivalent.cpp (equal): Added new version of equal.
                                  It terminates even even if its arguments contain cycles.
                                  It doesn't cause native stack overflow for long list.

2008-08-18  higepon  <higepon@users.sourceforge.jp>

        * read.cpp (read_internal): Added #, #` #,@ support.

        * lib/mosh/io/conditions.ss: Added for i/o-filename.

        * All of the internal errors are rewrote to error or assertion-violation.

2008-08-17  higepon  <higepon@users.sourceforge.jp>

        * scheme.cpp : Removed TypedVector.cpp

2008-08-16  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp (scheme::procedurePEx): Removed typdevector stuff.

        * ProcedureMacro.h: Added.

        * RecordProcedures.cpp: Replaced all RAISE to assertion-violation and added tests for them.

2008-08-15  higepon  <higepon@users.sourceforge.jp>

        * ViolationProcedures.cpp (scheme::throwEx): Added (throw ...) procedure.

        * tools/psyntax-r6rs/psyntax/main-mosh.ss (psyntax): Defined default exception handler.

2008-08-14  higepon  <higepon@users.sourceforge.jp>

        * Fixed with-exception-handler, raise, assertion-violation.

        * Passed hashtables test of R6RS test suite.

        * ViolationProcedures.cpp: Added.

        * library.scm (exists): Fixed bug of (exists proc lst).

        * VM.cpp (run): Added Object Pointer type checking for debug build.

                      : Rewrote apply.

2008-08-13  higepon  <higepon@users.sourceforge.jp>

        * library.scm (make-parameter): Added SRFI-39 Parameter Objects to Mosh core.

2008-08-12  higepon  <higepon@users.sourceforge.jp>

        * Added dynamic-wind. It works well.

        * VM.cpp (VM::run): Fixed bug of recieve from (values).

2008-08-08  higepon  <higepon@users.sourceforge.jp>

        * library.scm (expt): Addes expt.

        * r6rs-test-suite/Makefile (test): Added r6rs-test-suite from PLT Scheme.

        * Makefile.am (test): Added R6RS tests.

2008-08-07  higepon  <higepon@users.sourceforge.jp>

        * Implemented R6RS Conditions.

2008-08-05  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp (scheme::assertionViolationEx): added assertion-violation.

        * Implemented R6RS Records "Syntactic Layer".

        * r6rs-examples/record-test.ss: Added R6RS Records test.

        * Implemented R6RS Records "Inspection".

2008-08-04  higepon  <higepon@users.sourceforge.jp>

        * Implemented R6RS Records "Procedural Layer".

2008-08-01  higepon  <higepon@users.sourceforge.jp>

        * example/grass.scm: Applied a patch by IRIE Shinsuke.

        * VM.cpp (VM): Applied a patch for READ_CHAR by IRIE Shinsuke.

        * Record.h: Added.

        * RecordTypeDescriptor.h: Added.

        * Callable.h : Added.

2008-07-25  higepon  <higepon@users.sourceforge.jp>

        * Implemented all of hashtable procedures!

        * string-ci-hash, symbol-hash, equal-hash.

        * hashtable-clear!, hashtable-entries, hashtable-hash-function, hashtable-equivalence-function.

        * library.scm : hashtable-update!, hashtable-copy and hashtable-mutable?.

        * free-vars.scm : Added hashtable-delete!, hashtable-contains?.

2008-07-24  higepon  <higepon@users.sourceforge.jp>

        * free-vars.scm : Added (hashtable? ...) and (hashtable-size ...).

        * HashTableProceduures.cpp : Added (hash-string).

        * HashTableProceduures.h: Added.

        * HashTableProceduures.cpp: Added.

2008-07-22  higepon  <higepon@users.sourceforge.jp>

        * EqHashTable.h : Added (eq-hash ...).

        * GenericMap.h: Added.

        * GenericHashTable.h (scheme): Added.

        * HashTable.h (scheme): Added for Generic HashTable

2008-07-18  higepon  <higepon@users.sourceforge.jp>

        *  0.0.5 released.

2008-07-16  higepon  <higepon@users.sourceforge.jp>

        * library.scm: Removed CGI library from library.scm, it moved to r6rs-examples/ directory.

        * tools/psyntax-r6rs/psyntax-buildscript-mosh.ss : Added library rules.

        * r6rs-examples/cgi.ss: Rewrote cgi library with R6RS form.

        * r6rs-examples/lambda/wiki.ss: Rewrote lambda wiki with R6RS form.

2008-07-15  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp: Added extern char** environ.

2008-07-13  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp : Added set-symbol-value and symbol-value for psyntax.

        * VM.cpp (VM::callClosure3): Added for make-custom-binary-input-port.

2008-07-12  higepon  <higepon@users.sourceforge.jp>

        * Regexp.cpp (Regexp::replaceAll): Fixed finite loop.

        * freeproc.cpp (scheme::getEnvironmentVariablesEx): Added get-environment-variables.

        * tools/psyntax-r6rs/psyntax-buildscript-mosh.ss (identifier->library-map): Added for Mosh.

        * freeproc.h (scheme): renamed sys-getenv -> get-environment-variable.

        * freeproc.cpp (scheme::errorEx): Improved message for (error ...).

        * main.cpp (main): Added -b "R6RS batch mode" using psyntax.

        * VM.cpp (VM::getStackTrace): Fixed stack trace bug for <subr>.

        * freeproc.cpp (scheme::vectorPEx): Added vector?.

        * Added r6rs-test directory.

        * library.scm (string): Added document of (string ...).

        * freeproc.cpp (scheme::stringEx): Added (string ...).

2008-07-11  higepon  <higepon@users.sourceforge.jp>

        * match.cpp: pre-compiled.

2008-07-10  higepon  <higepon@users.sourceforge.jp>

        * CompilerProcedures.cpp (labelEx): Moved $label to C++.

2008-07-09  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/find-free): locals, can-frees and frees becomes list of symbols(used to be list of lvars).

2008-07-07  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (merge-insn): Moved merge-insn to C++.

2008-07-05  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp (VM::run): RE added "APPEND2" instruction for perfomance.

        * scheme.h (scheme): inlined car(), cdr(), cons(), makeClosure().

2008-07-04  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/compile-refer, pass1/find-symbol-in-lvars): Rewrote in C++ for perfomance.

        * CompilerProcedures.h: Added procedures for compiler.

        * compiler.scm (pass3/add-can-frees2): Improved very slow (append2 ...) call on compiler.

2008-07-03  higepon  <higepon@users.sourceforge.jp>

        * CodeBuilder.h (scheme): use ObjectVector instead of gc_vector<Object, gc_allocator<Object> > for perfomance.

        * freeproc.cpp (listTovectorEx): Added for perfomance.

2008-07-02  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass3/$asm): Rewrote internal define to global define for perfomance.

2008-07-01  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp (lengthEx): Rewrote (length ...) in C++ for perfomance.

        * compiler.scm (pass4/fixup-labels): Rewrote in C++ for perfomance.

2008-06-30  higepon  <higepon@users.sourceforge.jp>

        * VM.cpp (run): Improved cprocedure call speed.

2008-06-28  higepon  <higepon@users.sourceforge.jp>

        * Added (eq-hashtable-copy ht).

        * compiler.scm: removed set-union and set-intersect.


        * compiler.scm (pass3/$call): Changed (%set-union can-frees vars) => (append2 can-frees vars) for perfomance. (thx! koguro)

        * scheme.cpp (Object::cons): comment out source info copy. This made mosh very slow.

        * compiler.scm (pass3/find-free): Removed unnecesary append.

2008-06-26  higepon  <higepon@users.sourceforge.jp>

        * Improved compilaion speed on pass3 phase.

        * freeproc.cpp : Added (make-code-builder), (code-builder-put! cb o),
                               (code-builder-append cb1 cb2) and (code-builder-emit cb).

        * CodeBuilder.h (scheme): Added CodeBuilder object used for more efficient compilation.

2008-06-23  higepon  <higepon@users.sourceforge.jp>

        * library.scm : Added xcons, make-list, list-tabulate, list-copy, list=, split-at, split-at!, not-pair?
                        last-pair, last, circular-list, proper-list?, circular-list? and dotted-list?.

2008-06-20  higepon  <higepon@users.sourceforge.jp>

        * library.scm : Added take, drop, take!, take-right, drop-right
                            , drop-right!, integer?
                            , fifth, sixth, seventh, eighth, ninth and tenth

2008-06-19  higepon  <higepon@users.sourceforge.jp>

        * Pair.h (scheme): Added append(Object l, Object o) for (append ...).

        * compiler.scm (merge-insn): Added (not 'CONSTANT_PUSH) for PUSH_FRAME.

        * VM.cpp (VM::run): Removed APPEND instruction, it is buggy. We use appendEx instead.

2008-06-18  higepon  <higepon@users.sourceforge.jp>

        * main.cpp (main): Added -l option.

        * VM.cpp (VM::storeCallSample): Improved profiler results.

2008-06-17  higepon  <higepon@users.sourceforge.jp>

        * library.scm (string->lines): Added string->lines procedure.
                         (filter-map): Added filter-map, car+cdr (SRFI-1).
                                     : Added map-with-index.

        * Port.cpp (FileBinaryInputPort::FileBinaryInputPort): Fixed file open error condition.

    * VM.cpp (VM::applyClosure): Improved apply procedure. It used to use C stack, so changed not to use C stack.

2008-06-16  higepon  <higepon@users.sourceforge.jp>

    * freeproc.cpp : Fixed (exit) procedure. thx leque.

    * freeproc.cpp (scheme::callProcessEx): Added (call-process "ls").

    * compiler.scm: Improved stack trace, showing file and lineno for precompiled code.

    * scripts/pp.scm: Added for precompiled code.

2008-06-15  higepon  <higepon@users.sourceforge.jp>

    * free-vars.scm (*free-vars*): Added set-source-info for compiler.

2008-06-11  higepon  <higepon@users.sourceforge.jp>

    * library.scm (cons*): Added cons*.

    * freeproc.cpp: Added char>=?, char>? and char<=? and char<?.

    * library.scm (sort!): Fixed SEGV bug.
                           In library.scm, we can't use do macro.
                           Because do macro depend on match macro.

2008-06-10  higepon  <higepon@users.sourceforge.jp>

    * freeproc.cpp (scheme::dynamicWindEx): Added dynamic-wind. It's dummy for psyntax.pp.

2008-06-09  higepon  <higepon@users.sourceforge.jp>

    * VM.cpp : Rewrote multiple values support.

2008-06-06  higepon  <higepon@users.sourceforge.jp>

        * example/grass.scm (make-app): Added Grass interpreter.

2008-06-03  higepon  <higepon@users.sourceforge.jp>

        * test-data.scm (call-with-values): Fixed the bug of (call-with-values (lambda () (values 1 2)) cons).

        * freeproc.cpp (scheme::applyEx): Added argument check.

        * scheme.h (isCallable): Added for apply procedure.

2008-06-02  higepon  <higepon@users.sourceforge.jp>

        * Pair.h (scheme): Rewrote cloneList recut to loop.

        * repl.scm (repl): Added EOF handling for Ctrl-D.

        * VM.cpp (VM::load): Added TRY and CATCH macro.

2008-05-30  higepon  <higepon@users.sourceforge.jp>

        * Port.cpp (TextualOutputPort::putPair): Fixed bug of (write '(quote)).

2008-05-29  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp : Added load for internal use.

2008-05-28  higepon  <higepon@users.sourceforge.jp>

        * library.scm : Added procedure?, with-input-from-file.

2008-05-26  higepon  <higepon@users.sourceforge.jp>

        * Fixed case bug (thx leque).

        * compiler.scm (do): Added do macro using match.

        * read.cpp (Scm_StringToNumber): Fixed the bug for '... .
                                         strtol accept "..." and returns 0.

        * freeproc.cpp (scheme::macroexpandEx): Added macroexpand procedure.

2008-05-24  higepon  <higepon@users.sourceforge.jp>

        * match.scm: Added Andrew Wright's match.

        * library.scm : Added (list? obj) procedure.

        * library.scm (string-ref): Added (string-ref s k) procedure.

2008-05-23  higepon  <higepon@users.sourceforge.jp>

        * Added div procedure and some tests.

        * Fixed the bug of mod procedure and added some tests. (thx leque)

2008-05-22  higepon  <higepon@users.sourceforge.jp>

        * Added (exit) procedure.

        * Added profiler.
          With -p option, you can enable profiler.

2008-05-21  higepon  <higepon@users.sourceforge.jp>

        * library.scm (vector-for-each): Added (vector-for-each ...), Added (hash-table-for-each ...).

        * freeproc.cpp (scheme::hashTableKeysEx): Added (hash-table-keys ...)

        * macro.scm: Removed macro.scm.

        * vm.scm: Added pre-compiled macro support.
                  Only for top level macro defined at library.scm.
2008-05-19  higepon  <higepon@users.sourceforge.jp>

        * 0.0.3 released.

        * library.scm : Added for-all.


        * library.scm (even?): Added even? defined at Base Library.

        * freeproc.cpp : Added modulo procedure (mod a b).

        * VM.cpp : Added division support for Integer(Fixnum).

        * freeproc.cpp (scheme::applyEx): Fixed apply bug.

2008-05-18  higepon  <higepon@users.sourceforge.jp>

        * Added typed-vector for R6RS Record base.

        * TypedVector.h : Added.

2008-05-17  higepon  <higepon@users.sourceforge.jp>

        * freeproc.cpp (scheme::raiseContinuableEx): Added (raise-continuable ...).

        * scripts/gen-test.scm (print-test): Added mosh-only syntax, it is used for tests only for mosh.

        * macro.scm (guard): Added guard macro and document.

        * VM.cpp (VM::withExceptionHandler): Added with-exception-handler and document.

        * library.scm (raise): Added (raise ...) document.

        * Added (raise obj) procedure.

        * VM.cpp (VM::showStackTrace): Fixed SEGV with stack overflow.

        * Regexp.cpp: Fixed Regexp endian problem by masa_edw.

        * VM.cpp : Changed call frame structure, SEGV with stack trace fixed.

2008-05-15  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (pass1/sexp->iform): Fixed, (+) => 0, (*) => 1, thx leque.

2008-05-14  higepon  <higepon@users.sourceforge.jp>

        * compiler.scm (cond->if): Fixed the bug when cond clause like (cond ((3))).

        * library.scm (REPL): Added REPL.

        * freeproc.cpp (scheme::evalEx): Added (eval ...). Currently second argument of eval is ignored.

        * 0.0.2 released.

        * Symbol.h (scheme): OS X build patch by mesa_edw.

2008-05-13  higepon  <higepon@users.sourceforge.jp>

        * 0.0.1 released.
