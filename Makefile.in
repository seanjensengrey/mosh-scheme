# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
TESTS = test_object$(EXEEXT) test_vm$(EXEEXT) test_port$(EXEEXT) \
	test_fasl$(EXEEXT) test_ffi$(EXEEXT)
bin_PROGRAMS = mosh$(EXEEXT) test_port$(EXEEXT) test_fasl$(EXEEXT) \
	test_ffi$(EXEEXT) test_object$(EXEEXT) test_vm$(EXEEXT)
check_PROGRAMS = test_object$(EXEEXT) test_vm$(EXEEXT) \
	test_port$(EXEEXT) test_fasl$(EXEEXT) test_ffi$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/mosh_config.in $(top_srcdir)/configure \
	$(top_srcdir)/doc/text/Download.txt.in \
	$(top_srcdir)/lib/mosh/config.ss.in \
	$(top_srcdir)/lib/mosh/mysql.ss.in AUTHORS COPYING ChangeLog \
	INSTALL NEWS config.guess config.sub depcomp install-sh \
	missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = mosh_config lib/mosh/mysql.ss lib/mosh/config.ss \
	doc/text/Download.txt
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libmosh_a_AR = $(AR) $(ARFLAGS)
libmosh_a_LIBADD =
am_libmosh_a_OBJECTS = libmosh_a-Transcoder.$(OBJEXT) \
	libmosh_a-EqvHashTable.$(OBJEXT) libmosh_a-Compnum.$(OBJEXT) \
	libmosh_a-Fixnum.$(OBJEXT) libmosh_a-Closure.$(OBJEXT) \
	libmosh_a-UtilityProcedures.$(OBJEXT) \
	libmosh_a-ProcessProcedures.$(OBJEXT) \
	libmosh_a-Reader.$(OBJEXT) libmosh_a-NumberReader.$(OBJEXT) \
	libmosh_a-scheme.$(OBJEXT) libmosh_a-Regexp.$(OBJEXT) \
	libmosh_a-Symbol.$(OBJEXT) libmosh_a-VM.$(OBJEXT) \
	libmosh_a-VM-Profiler.$(OBJEXT) libmosh_a-VM-Run.$(OBJEXT) \
	libmosh_a-Scanner.$(OBJEXT) libmosh_a-NumberScanner.$(OBJEXT) \
	libmosh_a-ByteArrayBinaryInputPort.$(OBJEXT) \
	libmosh_a-ByteArrayBinaryOutputPort.$(OBJEXT) \
	libmosh_a-ScannerHelper.$(OBJEXT) \
	libmosh_a-Reader.tab.$(OBJEXT) \
	libmosh_a-NumberReader.tab.$(OBJEXT) \
	libmosh_a-FileBinaryInputPort.$(OBJEXT) \
	libmosh_a-BufferedFileBinaryInputPort.$(OBJEXT) \
	libmosh_a-FileBinaryOutputPort.$(OBJEXT) \
	libmosh_a-BufferedFileBinaryOutputPort.$(OBJEXT) \
	libmosh_a-CustomBinaryInputPort.$(OBJEXT) \
	libmosh_a-CustomTextualInputPort.$(OBJEXT) \
	libmosh_a-CustomTextualOutputPort.$(OBJEXT) \
	libmosh_a-CustomTextualInputOutputPort.$(OBJEXT) \
	libmosh_a-CustomBinaryInputOutputPort.$(OBJEXT) \
	libmosh_a-TextualOutputPort.$(OBJEXT) \
	libmosh_a-TextualInputPort.$(OBJEXT) \
	libmosh_a-TranscodedTextualInputPort.$(OBJEXT) \
	libmosh_a-TranscodedTextualOutputPort.$(OBJEXT) \
	libmosh_a-StringTextualOutputPort.$(OBJEXT) \
	libmosh_a-StringTextualInputPort.$(OBJEXT) \
	libmosh_a-Codec.$(OBJEXT) libmosh_a-UTF8Codec.$(OBJEXT) \
	libmosh_a-UTF16Codec.$(OBJEXT) libmosh_a-UTF32Codec.$(OBJEXT) \
	libmosh_a-EqHashTable.$(OBJEXT) libmosh_a-SString.$(OBJEXT) \
	libmosh_a-GenericHashTable.$(OBJEXT) \
	libmosh_a-Object.$(OBJEXT) \
	libmosh_a-RecordTypeDescriptor.$(OBJEXT) \
	libmosh_a-RecordConstructorDescriptor.$(OBJEXT) \
	libmosh_a-Record.$(OBJEXT) \
	libmosh_a-RecordProcedures.$(OBJEXT) \
	libmosh_a-ConditionProcedures.$(OBJEXT) \
	libmosh_a-CompilerProcedures.$(OBJEXT) \
	libmosh_a-HashTableProceduures.$(OBJEXT) \
	libmosh_a-RegexpProcedures.$(OBJEXT) \
	libmosh_a-StringProcedures.$(OBJEXT) \
	libmosh_a-PortProcedures.$(OBJEXT) \
	libmosh_a-ListProcedures.$(OBJEXT) \
	libmosh_a-ErrorProcedures.$(OBJEXT) \
	libmosh_a-ArithmeticProcedures.$(OBJEXT) \
	libmosh_a-FlonumProcedures.$(OBJEXT) \
	libmosh_a-BitwiseProcedures.$(OBJEXT) \
	libmosh_a-ByteVectorProcedures.$(OBJEXT) \
	libmosh_a-Equivalent.$(OBJEXT) \
	libmosh_a-CompoundCondition.$(OBJEXT) \
	libmosh_a-ucs4string.$(OBJEXT) libmosh_a-Vector.$(OBJEXT) \
	libmosh_a-Fasl.$(OBJEXT) libmosh_a-Arithmetic.$(OBJEXT) \
	libmosh_a-Ratnum.$(OBJEXT) libmosh_a-Bignum.$(OBJEXT) \
	libmosh_a-Flonum.$(OBJEXT) libmosh_a-CodeBuilder.$(OBJEXT) \
	libmosh_a-FixnumProcedures.$(OBJEXT) \
	libmosh_a-Latin1Codec.$(OBJEXT) libmosh_a-FFI.$(OBJEXT) \
	libmosh_a-FFIProcedures.$(OBJEXT) \
	libmosh_a-CustomBinaryOutputPort.$(OBJEXT) \
	libmosh_a-FileBinaryInputOutputPort.$(OBJEXT) \
	libmosh_a-TranscodedTextualInputOutputPort.$(OBJEXT) \
	libmosh_a-BufferedFileBinaryInputOutputPort.$(OBJEXT)
libmosh_a_OBJECTS = $(am_libmosh_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(datadir)" "$(DESTDIR)$(datadir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mosh_OBJECTS = mosh-main.$(OBJEXT)
mosh_OBJECTS = $(am_mosh_OBJECTS)
mosh_DEPENDENCIES = libmosh.a $(GC_LIB) $(REGEXP_LIB)
mosh_LINK = $(CXXLD) $(mosh_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_fasl_OBJECTS = test_fasl-FaslTest.$(OBJEXT) \
	test_fasl-TestingSignalHandler.$(OBJEXT) \
	test_fasl-TestingVM.$(OBJEXT)
test_fasl_OBJECTS = $(am_test_fasl_OBJECTS)
am__DEPENDENCIES_1 = libmosh.a gtest_main.a $(GC_LIB) $(REGEXP_LIB)
test_fasl_LINK = $(CXXLD) $(test_fasl_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_ffi_OBJECTS = test_ffi-FFITest.$(OBJEXT) \
	test_ffi-TestingSignalHandler.$(OBJEXT) \
	test_ffi-TestingVM.$(OBJEXT)
test_ffi_OBJECTS = $(am_test_ffi_OBJECTS)
test_ffi_LINK = $(CXXLD) $(test_ffi_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_object_OBJECTS = test_object-ObjectTest.$(OBJEXT) \
	test_object-TestingSignalHandler.$(OBJEXT)
test_object_OBJECTS = $(am_test_object_OBJECTS)
test_object_LINK = $(CXXLD) $(test_object_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_port_OBJECTS = test_port-PortTest.$(OBJEXT) \
	test_port-TestingSignalHandler.$(OBJEXT)
test_port_OBJECTS = $(am_test_port_OBJECTS)
test_port_LINK = $(CXXLD) $(test_port_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_vm_OBJECTS = test_vm-VMTest.$(OBJEXT) \
	test_vm-TestingVM.$(OBJEXT) \
	test_vm-TestingSignalHandler.$(OBJEXT)
test_vm_OBJECTS = $(am_test_vm_OBJECTS)
test_vm_LINK = $(CXXLD) $(test_vm_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libmosh_a_SOURCES) $(mosh_SOURCES) $(test_fasl_SOURCES) \
	$(test_ffi_SOURCES) $(test_object_SOURCES) \
	$(test_port_SOURCES) $(test_vm_SOURCES)
DIST_SOURCES = $(libmosh_a_SOURCES) $(mosh_SOURCES) \
	$(test_fasl_SOURCES) $(test_ffi_SOURCES) \
	$(test_object_SOURCES) $(test_port_SOURCES) $(test_vm_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dataDATA_INSTALL = $(INSTALL_DATA)
nobase_dataDATA_INSTALL = $(install_sh_DATA)
DATA = $(data_DATA) $(nobase_data_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GOSH = @GOSH@
GREP = @GREP@
HAVE_EXT_HASHES = @HAVE_EXT_HASHES@
HAVE_TR1_HASHES = @HAVE_TR1_HASHES@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MOSH_LIB_PATH = @MOSH_LIB_PATH@
MOSH_OPTS = @MOSH_OPTS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PATH_TO_MYSQLCLIENT = @PATH_TO_MYSQLCLIENT@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHLIB_SO_LDFLAGS = @SHLIB_SO_LDFLAGS@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@

#mosh_core_fasl_libraries = $(mosh_core_libraries:.ss=.ss.fasl)
datadir = @MOSH_LIB_PATH@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# GLOBAL CFLAGS
AM_CFLAGS = @MOSH_OPTS@
AM_CXXFLAGS = $(CFLAGS)

# Boehm GC
#BOEHM_GC_DIR = ./gc-7.1alpha3
BOEHM_GC_DIR = ./gc-7.1
GC_LIB = $(BOEHM_GC_DIR)/.libs/libgc.a

# Regexp library oniguruma
ONIG_DIR = ./onig-5.7.0
REGEXP_LIB = $(ONIG_DIR)/.libs/libonig.a

# for GTEST
GTEST_DIR = gtest-1.2.1
USER_DIR = .
GTEST_HEADERS_ = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

GTEST_CPPFLAGS_ = -I$(GTEST_DIR) -I$(GTEST_DIR)/include
SUBDIRS = $(BOEHM_GC_DIR) $(ONIG_DIR) .
bin_SCRIPTS = mosh_config

# mosh
# -O3 causes miss compile of NumberReader.tab.cpp. (newest gcc?)
# see http://d.hatena.ne.jp/higepon/20081114/1226645373
mosh_SOURCES = main.cpp
mosh_OPTS = -D MONA_SCHEME -D USE_BOEHM_GC -Wall -D MOSH_LIB_PATH="\"@MOSH_LIB_PATH@\"" -I $(includedir)
mosh_CFLAGS = $(mosh_OPTS)  -g -D_FILE_OFFSET_BITS=64 -Wall -pipe @MOSH_OPTS@ -DDEBUG_VERSION
mosh_CXXFLAGS = $(mosh_CFLAGS)
mosh_LDADD = libmosh.a $(GC_LIB) $(REGEXP_LIB) -ldl -lpthread
noinst_LIBRARIES = libmosh.a
libmosh_a_CXXFLAGS = $(mosh_CFLAGS) $(mosh_OPTS) -I$(GTEST_DIR) -I$(GTEST_DIR)/include
libmosh_a_SOURCES = \
HeapObject.h                                                       \
Object-inl.h                                                       \
Object-accessors.h                                                 \
Pair-inl.h                                                         \
VM-inl.h                                                           \
psyntax.h                                                          \
match.h                                                            \
compiler-with-library.h                                            \
CProcedure.h                                                       \
Instruction.h                                                      \
Callable.h                                                         \
GenericMap.h                                                       \
BinaryInputPort.h                                                  \
BinaryOutputPort.h                                                 \
config.h                                                           \
scheme.h                                                           \
ByteVector.h                                                       \
HashTable.h                                                        \
Pair.h                                                             \
Stack.h                                                            \
Box.h                                                              \
Codec.h                                                            \
Transcoder.h                   Transcoder.cpp                      \
ProcedureMacro.h                                                   \
EqvHashTable.h                 EqvHashTable.cpp                    \
Compnum.h                      Compnum.cpp                         \
Fixnum.h                       Fixnum.cpp                          \
Closure.h                      Closure.cpp                         \
UtilityProcedures.h            UtilityProcedures.cpp               \
ProcessProcedures.h            ProcessProcedures.cpp               \
Reader.h                       Reader.cpp                          \
NumberReader.h                 NumberReader.cpp                    \
scheme.h                       scheme.cpp                          \
Regexp.h                       Regexp.cpp                          \
Symbol.h                       Symbol.cpp                          \
VM.h                           VM.cpp                              \
VM-Profiler.cpp                VM-Run.cpp                          \
Scanner.h                      Scanner.cpp                         \
NumberScanner.h                NumberScanner.cpp                   \
ByteArrayBinaryInputPort.h     ByteArrayBinaryInputPort.cpp        \
ByteArrayBinaryOutputPort.h    ByteArrayBinaryOutputPort.cpp       \
ScannerHelper.h                ScannerHelper.cpp                   \
Reader.tab.hpp                 Reader.tab.cpp                      \
NumberReader.tab.hpp           NumberReader.tab.cpp                \
FileBinaryInputPort.h          FileBinaryInputPort.cpp             \
BufferedFileBinaryInputPort.h  BufferedFileBinaryInputPort.cpp     \
FileBinaryOutputPort.h         FileBinaryOutputPort.cpp            \
BufferedFileBinaryOutputPort.h BufferedFileBinaryOutputPort.cpp    \
CustomBinaryInputPort.h        CustomBinaryInputPort.cpp           \
CustomTextualInputPort.h       CustomTextualInputPort.cpp          \
CustomTextualOutputPort.h      CustomTextualOutputPort.cpp         \
CustomTextualInputOutputPort.h CustomTextualInputOutputPort.cpp    \
CustomBinaryInputOutputPort.h  CustomBinaryInputOutputPort.cpp     \
TextualOutputPort.h            TextualOutputPort.cpp               \
TextualInputPort.cpp           TextualInputPort.h                  \
TranscodedTextualInputPort.cpp TranscodedTextualInputPort.h        \
TranscodedTextualOutputPort.cpp TranscodedTextualOutputPort.h      \
StringTextualOutputPort.h      StringTextualOutputPort.cpp         \
StringTextualInputPort.h       StringTextualInputPort.cpp          \
Codec.cpp                      Codec.h                             \
UTF8Codec.cpp                  UTF8Codec.h                         \
UTF16Codec.cpp                 UTF16Codec.h                        \
UTF32Codec.cpp                 UTF32Codec.h                        \
EqHashTable.h                  EqHashTable.cpp                     \
SString.h                      SString.cpp                         \
GenericHashTable.h             GenericHashTable.cpp                \
Object.h                       Object.cpp                          \
RecordTypeDescriptor.h         RecordTypeDescriptor.cpp            \
RecordConstructorDescriptor.h  RecordConstructorDescriptor.cpp     \
Record.h                       Record.cpp                          \
RecordProcedures.cpp           RecordProcedures.h                  \
ConditionProcedures.cpp        ConditionProcedures.h               \
CompilerProcedures.cpp         CompilerProcedures.h                \
HashTableProceduures.cpp       HashTableProceduures.h              \
RegexpProcedures.cpp           RegexpProcedures.h                  \
StringProcedures.cpp           StringProcedures.h                  \
PortProcedures.cpp             PortProcedures.h                    \
ListProcedures.cpp             ListProcedures.h                    \
ErrorProcedures.cpp            ErrorProcedures.h                   \
ArithmeticProcedures.cpp       ArithmeticProcedures.h              \
FlonumProcedures.cpp           FlonumProcedures.h                  \
BitwiseProcedures.cpp          BitwiseProcedures.h                 \
ByteVectorProcedures.cpp       ByteVectorProcedures.h              \
Equivalent.h                   Equivalent.cpp                      \
CompoundCondition.h            CompoundCondition.cpp               \
ucs4string.h                   ucs4string.cpp                      \
Vector.h                       Vector.cpp                          \
Fasl.h                         Fasl.cpp                            \
Arithmetic.h                   Arithmetic.cpp                      \
Ratnum.h                       Ratnum.cpp                          \
Bignum.h                       Bignum.cpp                          \
Flonum.h                       Flonum.cpp                          \
CodeBuilder.h                  CodeBuilder.cpp                     \
FinxumProcedures.h             FixnumProcedures.cpp                \
Latin1Codec.h                  Latin1Codec.cpp                     \
FFI.h                          FFI.cpp                             \
FFIProcedures.h                FFIProcedures.cpp                   \
CustomBinaryOutputPort.h       CustomBinaryOutputPort.cpp          \
FileBinaryInputOutputPort.h    FileBinaryInputOutputPort.cpp       \
TranscodedTextualInputOutputPort.h  TranscodedTextualInputOutputPort.cpp  \
BufferedFileBinaryInputOutputPort.h  BufferedFileBinaryInputOutputPort.cpp

mosh_core_libraries = \
lib/lambda/wiki.ss    \
lib/mosh/ffi.ss    \
lib/mosh/dbi.ss    \
lib/mosh/mysql.ss    \
lib/mosh/process.ss \
lib/mosh/shell.ss \
lib/mosh/shell/repl.ss \
lib/mosh/dbd/mysql.ss  \
lib/mosh/test.ss   \
lib/mosh/pp.ss     \
lib/mosh/control.ss     \
lib/mosh/config.ss \
lib/mosh/cgi.ss  \
lib/clos/core.ss  lib/clos/helpers.ss  lib/clos/introspection.ss  lib/clos/slot-access.ss  lib/clos/user.ss \
lib/clos/bootstrap/generic-functions.ss  lib/clos/bootstrap/standard-classes.ss \
lib/clos/private/allocation.ikarus.ss         lib/clos/private/method-cache.ikarus.ss \
lib/clos/private/allocation.ss                lib/clos/private/method-cache.ss \
lib/clos/private/compat.ss                    \
lib/clos/private/core-class-layout.ss         lib/clos/private/slow-method-cache.ss \
lib/clos/private/top-sort.ss \
lib/clos/private/fast-method-cache.ikarus.ss \
lib/clos/std-protocols/add-method.ss            lib/clos/std-protocols/initialize.ss \
lib/clos/std-protocols/allocate-instance.ss     lib/clos/std-protocols/make.ss \
lib/clos/std-protocols/class-initialization.ss  lib/clos/std-protocols/print-object.ss \
lib/clos/std-protocols/generic-invocation.ss \
lib/srfi/private/include.sls \
lib/srfi/private/include/compat.mosh.sls \
lib/srfi/private/registry.sls \
lib/srfi/private/let-opt.sls \
lib/srfi/private/let-opt.sls \
lib/srfi/private/platform-features.mosh.sls \
lib/srfi/private/OS-id-features.sls \
lib/srfi/%3a0.sls \
lib/srfi/%3a0/cond-expand.sls \
lib/srfi/%3a1.sls \
lib/srfi/%3a1/lists.sls \
lib/srfi/%3a2.sls \
lib/srfi/%3a2/and-let%2a.sls \
lib/srfi/%3a1/lists/compat.mosh.sls \
lib/srfi/%3a6.sls \
lib/srfi/%3a6/basic-string-ports.sls \
lib/srfi/%3a6/basic-string-ports/compat.mosh.sls \
lib/srfi/%3a8.sls \
lib/srfi/%3a8/receive.sls \
lib/srfi/%3a9.sls \
lib/srfi/%3a9/records.sls \
lib/srfi/%3a11.sls \
lib/srfi/%3a11/let-values.sls \
lib/srfi/%3a13.sls \
lib/srfi/13/srfi-13.scm \
lib/srfi/%3a13/strings.sls \
lib/srfi/%3a14.sls \
lib/srfi/%3a14/char-sets.sls \
lib/srfi/14/srfi-14.scm \
lib/srfi/%3a16.sls \
lib/srfi/%3a16/case-lambda.sls \
lib/srfi/%3a19.sls \
lib/srfi/%3a19/time.sls \
lib/srfi/%3a19/time/compat.mosh.sls \
lib/srfi/19/srfi-19.scm \
lib/srfi/%3a23.sls \
lib/srfi/%3a23/error.sls \
lib/srfi/%3a26.sls \
lib/srfi/%3a26/cut.sls \
lib/srfi/26/cut.scm \
lib/srfi/%3a27.sls \
lib/srfi/%3a27/random-bits.sls \
lib/srfi/27/random.ss \
lib/srfi/%3a31.sls \
lib/srfi/%3a31/rec.sls \
lib/srfi/%3a37.sls \
lib/srfi/%3a37/args-fold.sls \
lib/srfi/37/srfi-37-reference.scm \
lib/srfi/%3a38.sls \
lib/srfi/%3a38/with-shared-structure.mosh.sls \
lib/srfi/%3a39.sls \
lib/srfi/%3a39/parameters.mosh.sls \
lib/srfi/%3a41.sls \
lib/srfi/%3a41/streams.sls \
lib/srfi/%3a41/streams/primitive.sls \
lib/srfi/%3a41/streams/derived.sls \
lib/srfi/%3a42.sls \
lib/srfi/%3a42/eager-comprehensions.sls \
lib/srfi/42/ec.scm \
lib/srfi/%3a43.sls \
lib/srfi/%3a43/vectors.sls \
lib/srfi/43/vector-lib.scm \
lib/srfi/%3a48.sls \
lib/srfi/%3a48/intermediate-format-strings.sls \
lib/srfi/%3a48/intermediate-format-strings/compat.mosh.sls \
lib/srfi/%3a61.sls \
lib/srfi/%3a61/cond.sls \
lib/srfi/%3a64.sls \
lib/srfi/%3a64/testing.sls \
lib/srfi/%3a67.sls \
lib/srfi/%3a67/compare-procedures.sls \
lib/srfi/67/compare.ss \
lib/srfi/%3a78.sls \
lib/srfi/%3a78/lightweight-testing.sls \
lib/srfi/%3a78/lightweight-testing/compat.mosh.sls \
lib/srfi/78/check.scm \
lib/srfi/%3a98.ss \
lib/srfi/%3a98/os-environment-variables.sls

data_DATA = all-tests.scm #repl.scm #tools/psyntax-r6rs/rev10_to_10/psyntax.scm
nobase_data_DATA = ${mosh_core_libraries} #${mosh_core_fasl_libraries}
PRECOMPILE_SRC = compiler-with-library.scmc match.scmc psyntax.scmc
INCLUDES = -I $(BOEHM_GC_DIR)/include -I $(ONIG_DIR)
EXTRA_DIST = instruction.scm vm.scm library.scm compiler.scm free-vars.scm scripts match.scm test-data.scm doc repl.scm tools/psyntax-r6rs/rev10_to_10/psyntax.scm r6rs-examples tools/psyntax-r6rs RELNOTE r6rs-test-suite example lib cprocedures.cpp labels.cpp all-tests.scm test
GENERATED = \
all-tests.scm Scanner.cpp NumberScanner.cpp psyntax.cpp  compiler-gauche.scm \
DebugInstruction.h cprocedures.cpp      \
labels.cpp match.cpp compiler.cpp psyntax.scmc             \
match.scmc compiler-with-library.scmc compiler-vm-cpp.scm  \
compiler-vm.scm compiler-with-library.scm Instruction.h    \
psyntax.h psyntax.fasl match.h match.fasl                  \
compiler-with-library.h compiler-with-library.fasl

CLEANFILES = gtest.a gtest_main.a
MAINTAINERCLEANFILES = $(GENERATED)
@DEVELOPER_TRUE@CORE_LIBS = \
@DEVELOPER_TRUE@    lib/core/fixnum.scm     \
@DEVELOPER_TRUE@    lib/core/flonum.scm     \
@DEVELOPER_TRUE@    lib/core/bitwise.scm    \
@DEVELOPER_TRUE@    lib/core/bytevector.scm \
@DEVELOPER_TRUE@    lib/core/base.scm       \
@DEVELOPER_TRUE@    lib/core/r5rs.scm       \
@DEVELOPER_TRUE@    lib/core/hashtable.scm


# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS_)
TEST_CXXFLAGS_ = $(mosh_CFLAGS) $(mosh_OPTS) -I$(GTEST_DIR) -I$(GTEST_DIR)/include -DGTEST_HAS_CLONE=0
TEST_LDADD_ = libmosh.a gtest_main.a $(GC_LIB) $(REGEXP_LIB)  -ldl -lpthread
TEST_DEPENDENCIES_ = libmosh.a gtest_main.a
test_object_DEPENDENCIES = $(TEST_DEPENDENCIES_)
test_object_CXXFLAGS = $(TEST_CXXFLAGS_)
test_object_SOURCES = ObjectTest.cpp TestingSignalHandler.cpp
test_object_LDADD = $(TEST_LDADD_)
test_vm_DEPENDENCIES = $(TEST_DEPENDENCIES_)
test_vm_CXXFLAGS = $(TEST_CXXFLAGS_)
test_vm_SOURCES = VMTest.cpp TestingVM.cpp TestingSignalHandler.cpp
test_vm_LDADD = $(TEST_LDADD_)
test_port_DEPENDENCIES = $(TEST_DEPENDENCIES_)
test_port_CXXFLAGS = $(TEST_CXXFLAGS_)
test_port_SOURCES = PortTest.cpp TestingSignalHandler.cpp
test_port_LDADD = $(TEST_LDADD_)
test_fasl_DEPENDENCIES = $(TEST_DEPENDENCIES_)
test_fasl_CXXFLAGS = $(TEST_CXXFLAGS_)
test_fasl_SOURCES = FaslTest.cpp TestingSignalHandler.cpp TestingVM.cpp
test_fasl_LDADD = $(TEST_LDADD_)
test_ffi_DEPENDENCIES = $(TEST_DEPENDENCIES_) libffitest.so.1.0
test_ffi_CXXFLAGS = $(TEST_CXXFLAGS_)
test_ffi_SOURCES = FFITest.cpp TestingSignalHandler.cpp TestingVM.cpp
test_ffi_LDADD = $(TEST_LDADD_)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .h .o .obj .scmc
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
mosh_config: $(top_builddir)/config.status $(srcdir)/mosh_config.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
lib/mosh/mysql.ss: $(top_builddir)/config.status $(top_srcdir)/lib/mosh/mysql.ss.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
lib/mosh/config.ss: $(top_builddir)/config.status $(top_srcdir)/lib/mosh/config.ss.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/text/Download.txt: $(top_builddir)/config.status $(top_srcdir)/doc/text/Download.txt.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libmosh.a: $(libmosh_a_OBJECTS) $(libmosh_a_DEPENDENCIES) 
	-rm -f libmosh.a
	$(libmosh_a_AR) libmosh.a $(libmosh_a_OBJECTS) $(libmosh_a_LIBADD)
	$(RANLIB) libmosh.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
mosh$(EXEEXT): $(mosh_OBJECTS) $(mosh_DEPENDENCIES) 
	@rm -f mosh$(EXEEXT)
	$(mosh_LINK) $(mosh_OBJECTS) $(mosh_LDADD) $(LIBS)
test_fasl$(EXEEXT): $(test_fasl_OBJECTS) $(test_fasl_DEPENDENCIES) 
	@rm -f test_fasl$(EXEEXT)
	$(test_fasl_LINK) $(test_fasl_OBJECTS) $(test_fasl_LDADD) $(LIBS)
test_ffi$(EXEEXT): $(test_ffi_OBJECTS) $(test_ffi_DEPENDENCIES) 
	@rm -f test_ffi$(EXEEXT)
	$(test_ffi_LINK) $(test_ffi_OBJECTS) $(test_ffi_LDADD) $(LIBS)
test_object$(EXEEXT): $(test_object_OBJECTS) $(test_object_DEPENDENCIES) 
	@rm -f test_object$(EXEEXT)
	$(test_object_LINK) $(test_object_OBJECTS) $(test_object_LDADD) $(LIBS)
test_port$(EXEEXT): $(test_port_OBJECTS) $(test_port_DEPENDENCIES) 
	@rm -f test_port$(EXEEXT)
	$(test_port_LINK) $(test_port_OBJECTS) $(test_port_LDADD) $(LIBS)
test_vm$(EXEEXT): $(test_vm_OBJECTS) $(test_vm_DEPENDENCIES) 
	@rm -f test_vm$(EXEEXT)
	$(test_vm_LINK) $(test_vm_OBJECTS) $(test_vm_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Arithmetic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ArithmeticProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Bignum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-BitwiseProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ByteVectorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Closure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CodeBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CompilerProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Compnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CompoundCondition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ConditionProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomTextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-CustomTextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-EqHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Equivalent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-EqvHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ErrorProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FFI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FFIProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Fasl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FileBinaryInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FileBinaryOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Fixnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FixnumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Flonum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-FlonumProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-GenericHashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-HashTableProceduures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Latin1Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ListProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-NumberReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-NumberReader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-NumberScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-PortProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ProcessProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Ratnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Reader.tab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Record.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-RecordProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-RecordTypeDescriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Regexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-RegexpProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-SString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ScannerHelper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-StringProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-StringTextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-StringTextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-TextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-TextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Transcoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-UTF16Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-UTF32Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-UTF8Codec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-UtilityProcedures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-VM-Profiler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-VM-Run.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-VM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-Vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-scheme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmosh_a-ucs4string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mosh-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_fasl-FaslTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_fasl-TestingSignalHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_fasl-TestingVM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ffi-FFITest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ffi-TestingSignalHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ffi-TestingVM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_object-ObjectTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_object-TestingSignalHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_port-PortTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_port-TestingSignalHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vm-TestingSignalHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vm-TestingVM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vm-VMTest.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libmosh_a-Transcoder.o: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Transcoder.o -MD -MP -MF $(DEPDIR)/libmosh_a-Transcoder.Tpo -c -o libmosh_a-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Transcoder.Tpo $(DEPDIR)/libmosh_a-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='libmosh_a-Transcoder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Transcoder.o `test -f 'Transcoder.cpp' || echo '$(srcdir)/'`Transcoder.cpp

libmosh_a-Transcoder.obj: Transcoder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Transcoder.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Transcoder.Tpo -c -o libmosh_a-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Transcoder.Tpo $(DEPDIR)/libmosh_a-Transcoder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Transcoder.cpp' object='libmosh_a-Transcoder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Transcoder.obj `if test -f 'Transcoder.cpp'; then $(CYGPATH_W) 'Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transcoder.cpp'; fi`

libmosh_a-EqvHashTable.o: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-EqvHashTable.o -MD -MP -MF $(DEPDIR)/libmosh_a-EqvHashTable.Tpo -c -o libmosh_a-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-EqvHashTable.Tpo $(DEPDIR)/libmosh_a-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='libmosh_a-EqvHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-EqvHashTable.o `test -f 'EqvHashTable.cpp' || echo '$(srcdir)/'`EqvHashTable.cpp

libmosh_a-EqvHashTable.obj: EqvHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-EqvHashTable.obj -MD -MP -MF $(DEPDIR)/libmosh_a-EqvHashTable.Tpo -c -o libmosh_a-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-EqvHashTable.Tpo $(DEPDIR)/libmosh_a-EqvHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqvHashTable.cpp' object='libmosh_a-EqvHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-EqvHashTable.obj `if test -f 'EqvHashTable.cpp'; then $(CYGPATH_W) 'EqvHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqvHashTable.cpp'; fi`

libmosh_a-Compnum.o: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Compnum.o -MD -MP -MF $(DEPDIR)/libmosh_a-Compnum.Tpo -c -o libmosh_a-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Compnum.Tpo $(DEPDIR)/libmosh_a-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='libmosh_a-Compnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Compnum.o `test -f 'Compnum.cpp' || echo '$(srcdir)/'`Compnum.cpp

libmosh_a-Compnum.obj: Compnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Compnum.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Compnum.Tpo -c -o libmosh_a-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Compnum.Tpo $(DEPDIR)/libmosh_a-Compnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compnum.cpp' object='libmosh_a-Compnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Compnum.obj `if test -f 'Compnum.cpp'; then $(CYGPATH_W) 'Compnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Compnum.cpp'; fi`

libmosh_a-Fixnum.o: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Fixnum.o -MD -MP -MF $(DEPDIR)/libmosh_a-Fixnum.Tpo -c -o libmosh_a-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Fixnum.Tpo $(DEPDIR)/libmosh_a-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='libmosh_a-Fixnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Fixnum.o `test -f 'Fixnum.cpp' || echo '$(srcdir)/'`Fixnum.cpp

libmosh_a-Fixnum.obj: Fixnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Fixnum.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Fixnum.Tpo -c -o libmosh_a-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Fixnum.Tpo $(DEPDIR)/libmosh_a-Fixnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fixnum.cpp' object='libmosh_a-Fixnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Fixnum.obj `if test -f 'Fixnum.cpp'; then $(CYGPATH_W) 'Fixnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Fixnum.cpp'; fi`

libmosh_a-Closure.o: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Closure.o -MD -MP -MF $(DEPDIR)/libmosh_a-Closure.Tpo -c -o libmosh_a-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Closure.Tpo $(DEPDIR)/libmosh_a-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='libmosh_a-Closure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Closure.o `test -f 'Closure.cpp' || echo '$(srcdir)/'`Closure.cpp

libmosh_a-Closure.obj: Closure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Closure.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Closure.Tpo -c -o libmosh_a-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Closure.Tpo $(DEPDIR)/libmosh_a-Closure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Closure.cpp' object='libmosh_a-Closure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Closure.obj `if test -f 'Closure.cpp'; then $(CYGPATH_W) 'Closure.cpp'; else $(CYGPATH_W) '$(srcdir)/Closure.cpp'; fi`

libmosh_a-UtilityProcedures.o: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UtilityProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-UtilityProcedures.Tpo -c -o libmosh_a-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UtilityProcedures.Tpo $(DEPDIR)/libmosh_a-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='libmosh_a-UtilityProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UtilityProcedures.o `test -f 'UtilityProcedures.cpp' || echo '$(srcdir)/'`UtilityProcedures.cpp

libmosh_a-UtilityProcedures.obj: UtilityProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UtilityProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-UtilityProcedures.Tpo -c -o libmosh_a-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UtilityProcedures.Tpo $(DEPDIR)/libmosh_a-UtilityProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UtilityProcedures.cpp' object='libmosh_a-UtilityProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UtilityProcedures.obj `if test -f 'UtilityProcedures.cpp'; then $(CYGPATH_W) 'UtilityProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilityProcedures.cpp'; fi`

libmosh_a-ProcessProcedures.o: ProcessProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ProcessProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ProcessProcedures.Tpo -c -o libmosh_a-ProcessProcedures.o `test -f 'ProcessProcedures.cpp' || echo '$(srcdir)/'`ProcessProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ProcessProcedures.Tpo $(DEPDIR)/libmosh_a-ProcessProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ProcessProcedures.cpp' object='libmosh_a-ProcessProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ProcessProcedures.o `test -f 'ProcessProcedures.cpp' || echo '$(srcdir)/'`ProcessProcedures.cpp

libmosh_a-ProcessProcedures.obj: ProcessProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ProcessProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ProcessProcedures.Tpo -c -o libmosh_a-ProcessProcedures.obj `if test -f 'ProcessProcedures.cpp'; then $(CYGPATH_W) 'ProcessProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ProcessProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ProcessProcedures.Tpo $(DEPDIR)/libmosh_a-ProcessProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ProcessProcedures.cpp' object='libmosh_a-ProcessProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ProcessProcedures.obj `if test -f 'ProcessProcedures.cpp'; then $(CYGPATH_W) 'ProcessProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ProcessProcedures.cpp'; fi`

libmosh_a-Reader.o: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Reader.o -MD -MP -MF $(DEPDIR)/libmosh_a-Reader.Tpo -c -o libmosh_a-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Reader.Tpo $(DEPDIR)/libmosh_a-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='libmosh_a-Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Reader.o `test -f 'Reader.cpp' || echo '$(srcdir)/'`Reader.cpp

libmosh_a-Reader.obj: Reader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Reader.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Reader.Tpo -c -o libmosh_a-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Reader.Tpo $(DEPDIR)/libmosh_a-Reader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.cpp' object='libmosh_a-Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Reader.obj `if test -f 'Reader.cpp'; then $(CYGPATH_W) 'Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.cpp'; fi`

libmosh_a-NumberReader.o: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberReader.o -MD -MP -MF $(DEPDIR)/libmosh_a-NumberReader.Tpo -c -o libmosh_a-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberReader.Tpo $(DEPDIR)/libmosh_a-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='libmosh_a-NumberReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberReader.o `test -f 'NumberReader.cpp' || echo '$(srcdir)/'`NumberReader.cpp

libmosh_a-NumberReader.obj: NumberReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberReader.obj -MD -MP -MF $(DEPDIR)/libmosh_a-NumberReader.Tpo -c -o libmosh_a-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberReader.Tpo $(DEPDIR)/libmosh_a-NumberReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.cpp' object='libmosh_a-NumberReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberReader.obj `if test -f 'NumberReader.cpp'; then $(CYGPATH_W) 'NumberReader.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.cpp'; fi`

libmosh_a-scheme.o: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-scheme.o -MD -MP -MF $(DEPDIR)/libmosh_a-scheme.Tpo -c -o libmosh_a-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-scheme.Tpo $(DEPDIR)/libmosh_a-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='libmosh_a-scheme.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-scheme.o `test -f 'scheme.cpp' || echo '$(srcdir)/'`scheme.cpp

libmosh_a-scheme.obj: scheme.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-scheme.obj -MD -MP -MF $(DEPDIR)/libmosh_a-scheme.Tpo -c -o libmosh_a-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-scheme.Tpo $(DEPDIR)/libmosh_a-scheme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheme.cpp' object='libmosh_a-scheme.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-scheme.obj `if test -f 'scheme.cpp'; then $(CYGPATH_W) 'scheme.cpp'; else $(CYGPATH_W) '$(srcdir)/scheme.cpp'; fi`

libmosh_a-Regexp.o: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Regexp.o -MD -MP -MF $(DEPDIR)/libmosh_a-Regexp.Tpo -c -o libmosh_a-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Regexp.Tpo $(DEPDIR)/libmosh_a-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='libmosh_a-Regexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Regexp.o `test -f 'Regexp.cpp' || echo '$(srcdir)/'`Regexp.cpp

libmosh_a-Regexp.obj: Regexp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Regexp.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Regexp.Tpo -c -o libmosh_a-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Regexp.Tpo $(DEPDIR)/libmosh_a-Regexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Regexp.cpp' object='libmosh_a-Regexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Regexp.obj `if test -f 'Regexp.cpp'; then $(CYGPATH_W) 'Regexp.cpp'; else $(CYGPATH_W) '$(srcdir)/Regexp.cpp'; fi`

libmosh_a-Symbol.o: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Symbol.o -MD -MP -MF $(DEPDIR)/libmosh_a-Symbol.Tpo -c -o libmosh_a-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Symbol.Tpo $(DEPDIR)/libmosh_a-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='libmosh_a-Symbol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Symbol.o `test -f 'Symbol.cpp' || echo '$(srcdir)/'`Symbol.cpp

libmosh_a-Symbol.obj: Symbol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Symbol.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Symbol.Tpo -c -o libmosh_a-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Symbol.Tpo $(DEPDIR)/libmosh_a-Symbol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Symbol.cpp' object='libmosh_a-Symbol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Symbol.obj `if test -f 'Symbol.cpp'; then $(CYGPATH_W) 'Symbol.cpp'; else $(CYGPATH_W) '$(srcdir)/Symbol.cpp'; fi`

libmosh_a-VM.o: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM.o -MD -MP -MF $(DEPDIR)/libmosh_a-VM.Tpo -c -o libmosh_a-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM.Tpo $(DEPDIR)/libmosh_a-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='libmosh_a-VM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM.o `test -f 'VM.cpp' || echo '$(srcdir)/'`VM.cpp

libmosh_a-VM.obj: VM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM.obj -MD -MP -MF $(DEPDIR)/libmosh_a-VM.Tpo -c -o libmosh_a-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM.Tpo $(DEPDIR)/libmosh_a-VM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM.cpp' object='libmosh_a-VM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM.obj `if test -f 'VM.cpp'; then $(CYGPATH_W) 'VM.cpp'; else $(CYGPATH_W) '$(srcdir)/VM.cpp'; fi`

libmosh_a-VM-Profiler.o: VM-Profiler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM-Profiler.o -MD -MP -MF $(DEPDIR)/libmosh_a-VM-Profiler.Tpo -c -o libmosh_a-VM-Profiler.o `test -f 'VM-Profiler.cpp' || echo '$(srcdir)/'`VM-Profiler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM-Profiler.Tpo $(DEPDIR)/libmosh_a-VM-Profiler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM-Profiler.cpp' object='libmosh_a-VM-Profiler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM-Profiler.o `test -f 'VM-Profiler.cpp' || echo '$(srcdir)/'`VM-Profiler.cpp

libmosh_a-VM-Profiler.obj: VM-Profiler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM-Profiler.obj -MD -MP -MF $(DEPDIR)/libmosh_a-VM-Profiler.Tpo -c -o libmosh_a-VM-Profiler.obj `if test -f 'VM-Profiler.cpp'; then $(CYGPATH_W) 'VM-Profiler.cpp'; else $(CYGPATH_W) '$(srcdir)/VM-Profiler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM-Profiler.Tpo $(DEPDIR)/libmosh_a-VM-Profiler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM-Profiler.cpp' object='libmosh_a-VM-Profiler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM-Profiler.obj `if test -f 'VM-Profiler.cpp'; then $(CYGPATH_W) 'VM-Profiler.cpp'; else $(CYGPATH_W) '$(srcdir)/VM-Profiler.cpp'; fi`

libmosh_a-VM-Run.o: VM-Run.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM-Run.o -MD -MP -MF $(DEPDIR)/libmosh_a-VM-Run.Tpo -c -o libmosh_a-VM-Run.o `test -f 'VM-Run.cpp' || echo '$(srcdir)/'`VM-Run.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM-Run.Tpo $(DEPDIR)/libmosh_a-VM-Run.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM-Run.cpp' object='libmosh_a-VM-Run.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM-Run.o `test -f 'VM-Run.cpp' || echo '$(srcdir)/'`VM-Run.cpp

libmosh_a-VM-Run.obj: VM-Run.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-VM-Run.obj -MD -MP -MF $(DEPDIR)/libmosh_a-VM-Run.Tpo -c -o libmosh_a-VM-Run.obj `if test -f 'VM-Run.cpp'; then $(CYGPATH_W) 'VM-Run.cpp'; else $(CYGPATH_W) '$(srcdir)/VM-Run.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-VM-Run.Tpo $(DEPDIR)/libmosh_a-VM-Run.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VM-Run.cpp' object='libmosh_a-VM-Run.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-VM-Run.obj `if test -f 'VM-Run.cpp'; then $(CYGPATH_W) 'VM-Run.cpp'; else $(CYGPATH_W) '$(srcdir)/VM-Run.cpp'; fi`

libmosh_a-Scanner.o: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Scanner.o -MD -MP -MF $(DEPDIR)/libmosh_a-Scanner.Tpo -c -o libmosh_a-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Scanner.Tpo $(DEPDIR)/libmosh_a-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='libmosh_a-Scanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Scanner.o `test -f 'Scanner.cpp' || echo '$(srcdir)/'`Scanner.cpp

libmosh_a-Scanner.obj: Scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Scanner.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Scanner.Tpo -c -o libmosh_a-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Scanner.Tpo $(DEPDIR)/libmosh_a-Scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Scanner.cpp' object='libmosh_a-Scanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Scanner.obj `if test -f 'Scanner.cpp'; then $(CYGPATH_W) 'Scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/Scanner.cpp'; fi`

libmosh_a-NumberScanner.o: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberScanner.o -MD -MP -MF $(DEPDIR)/libmosh_a-NumberScanner.Tpo -c -o libmosh_a-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberScanner.Tpo $(DEPDIR)/libmosh_a-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='libmosh_a-NumberScanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberScanner.o `test -f 'NumberScanner.cpp' || echo '$(srcdir)/'`NumberScanner.cpp

libmosh_a-NumberScanner.obj: NumberScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberScanner.obj -MD -MP -MF $(DEPDIR)/libmosh_a-NumberScanner.Tpo -c -o libmosh_a-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberScanner.Tpo $(DEPDIR)/libmosh_a-NumberScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberScanner.cpp' object='libmosh_a-NumberScanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberScanner.obj `if test -f 'NumberScanner.cpp'; then $(CYGPATH_W) 'NumberScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberScanner.cpp'; fi`

libmosh_a-ByteArrayBinaryInputPort.o: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteArrayBinaryInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Tpo -c -o libmosh_a-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='libmosh_a-ByteArrayBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteArrayBinaryInputPort.o `test -f 'ByteArrayBinaryInputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryInputPort.cpp

libmosh_a-ByteArrayBinaryInputPort.obj: ByteArrayBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteArrayBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Tpo -c -o libmosh_a-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-ByteArrayBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryInputPort.cpp' object='libmosh_a-ByteArrayBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteArrayBinaryInputPort.obj `if test -f 'ByteArrayBinaryInputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryInputPort.cpp'; fi`

libmosh_a-ByteArrayBinaryOutputPort.o: ByteArrayBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteArrayBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Tpo -c -o libmosh_a-ByteArrayBinaryOutputPort.o `test -f 'ByteArrayBinaryOutputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryOutputPort.cpp' object='libmosh_a-ByteArrayBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteArrayBinaryOutputPort.o `test -f 'ByteArrayBinaryOutputPort.cpp' || echo '$(srcdir)/'`ByteArrayBinaryOutputPort.cpp

libmosh_a-ByteArrayBinaryOutputPort.obj: ByteArrayBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteArrayBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Tpo -c -o libmosh_a-ByteArrayBinaryOutputPort.obj `if test -f 'ByteArrayBinaryOutputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-ByteArrayBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteArrayBinaryOutputPort.cpp' object='libmosh_a-ByteArrayBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteArrayBinaryOutputPort.obj `if test -f 'ByteArrayBinaryOutputPort.cpp'; then $(CYGPATH_W) 'ByteArrayBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteArrayBinaryOutputPort.cpp'; fi`

libmosh_a-ScannerHelper.o: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ScannerHelper.o -MD -MP -MF $(DEPDIR)/libmosh_a-ScannerHelper.Tpo -c -o libmosh_a-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ScannerHelper.Tpo $(DEPDIR)/libmosh_a-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='libmosh_a-ScannerHelper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ScannerHelper.o `test -f 'ScannerHelper.cpp' || echo '$(srcdir)/'`ScannerHelper.cpp

libmosh_a-ScannerHelper.obj: ScannerHelper.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ScannerHelper.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ScannerHelper.Tpo -c -o libmosh_a-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ScannerHelper.Tpo $(DEPDIR)/libmosh_a-ScannerHelper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScannerHelper.cpp' object='libmosh_a-ScannerHelper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ScannerHelper.obj `if test -f 'ScannerHelper.cpp'; then $(CYGPATH_W) 'ScannerHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/ScannerHelper.cpp'; fi`

libmosh_a-Reader.tab.o: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Reader.tab.o -MD -MP -MF $(DEPDIR)/libmosh_a-Reader.tab.Tpo -c -o libmosh_a-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Reader.tab.Tpo $(DEPDIR)/libmosh_a-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='libmosh_a-Reader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Reader.tab.o `test -f 'Reader.tab.cpp' || echo '$(srcdir)/'`Reader.tab.cpp

libmosh_a-Reader.tab.obj: Reader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Reader.tab.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Reader.tab.Tpo -c -o libmosh_a-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Reader.tab.Tpo $(DEPDIR)/libmosh_a-Reader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Reader.tab.cpp' object='libmosh_a-Reader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Reader.tab.obj `if test -f 'Reader.tab.cpp'; then $(CYGPATH_W) 'Reader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader.tab.cpp'; fi`

libmosh_a-NumberReader.tab.o: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberReader.tab.o -MD -MP -MF $(DEPDIR)/libmosh_a-NumberReader.tab.Tpo -c -o libmosh_a-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberReader.tab.Tpo $(DEPDIR)/libmosh_a-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='libmosh_a-NumberReader.tab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberReader.tab.o `test -f 'NumberReader.tab.cpp' || echo '$(srcdir)/'`NumberReader.tab.cpp

libmosh_a-NumberReader.tab.obj: NumberReader.tab.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-NumberReader.tab.obj -MD -MP -MF $(DEPDIR)/libmosh_a-NumberReader.tab.Tpo -c -o libmosh_a-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-NumberReader.tab.Tpo $(DEPDIR)/libmosh_a-NumberReader.tab.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NumberReader.tab.cpp' object='libmosh_a-NumberReader.tab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-NumberReader.tab.obj `if test -f 'NumberReader.tab.cpp'; then $(CYGPATH_W) 'NumberReader.tab.cpp'; else $(CYGPATH_W) '$(srcdir)/NumberReader.tab.cpp'; fi`

libmosh_a-FileBinaryInputPort.o: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryInputPort.Tpo -c -o libmosh_a-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='libmosh_a-FileBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryInputPort.o `test -f 'FileBinaryInputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputPort.cpp

libmosh_a-FileBinaryInputPort.obj: FileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryInputPort.Tpo -c -o libmosh_a-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputPort.cpp' object='libmosh_a-FileBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryInputPort.obj `if test -f 'FileBinaryInputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputPort.cpp'; fi`

libmosh_a-BufferedFileBinaryInputPort.o: BufferedFileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Tpo -c -o libmosh_a-BufferedFileBinaryInputPort.o `test -f 'BufferedFileBinaryInputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryInputPort.cpp' object='libmosh_a-BufferedFileBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryInputPort.o `test -f 'BufferedFileBinaryInputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryInputPort.cpp

libmosh_a-BufferedFileBinaryInputPort.obj: BufferedFileBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Tpo -c -o libmosh_a-BufferedFileBinaryInputPort.obj `if test -f 'BufferedFileBinaryInputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryInputPort.cpp' object='libmosh_a-BufferedFileBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryInputPort.obj `if test -f 'BufferedFileBinaryInputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryInputPort.cpp'; fi`

libmosh_a-FileBinaryOutputPort.o: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Tpo -c -o libmosh_a-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='libmosh_a-FileBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryOutputPort.o `test -f 'FileBinaryOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryOutputPort.cpp

libmosh_a-FileBinaryOutputPort.obj: FileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Tpo -c -o libmosh_a-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryOutputPort.cpp' object='libmosh_a-FileBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryOutputPort.obj `if test -f 'FileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryOutputPort.cpp'; fi`

libmosh_a-BufferedFileBinaryOutputPort.o: BufferedFileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Tpo -c -o libmosh_a-BufferedFileBinaryOutputPort.o `test -f 'BufferedFileBinaryOutputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryOutputPort.cpp' object='libmosh_a-BufferedFileBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryOutputPort.o `test -f 'BufferedFileBinaryOutputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryOutputPort.cpp

libmosh_a-BufferedFileBinaryOutputPort.obj: BufferedFileBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Tpo -c -o libmosh_a-BufferedFileBinaryOutputPort.obj `if test -f 'BufferedFileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryOutputPort.cpp' object='libmosh_a-BufferedFileBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryOutputPort.obj `if test -f 'BufferedFileBinaryOutputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryOutputPort.cpp'; fi`

libmosh_a-CustomBinaryInputPort.o: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Tpo -c -o libmosh_a-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='libmosh_a-CustomBinaryInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryInputPort.o `test -f 'CustomBinaryInputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputPort.cpp

libmosh_a-CustomBinaryInputPort.obj: CustomBinaryInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Tpo -c -o libmosh_a-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputPort.cpp' object='libmosh_a-CustomBinaryInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryInputPort.obj `if test -f 'CustomBinaryInputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputPort.cpp'; fi`

libmosh_a-CustomTextualInputPort.o: CustomTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualInputPort.Tpo -c -o libmosh_a-CustomTextualInputPort.o `test -f 'CustomTextualInputPort.cpp' || echo '$(srcdir)/'`CustomTextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualInputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualInputPort.cpp' object='libmosh_a-CustomTextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualInputPort.o `test -f 'CustomTextualInputPort.cpp' || echo '$(srcdir)/'`CustomTextualInputPort.cpp

libmosh_a-CustomTextualInputPort.obj: CustomTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualInputPort.Tpo -c -o libmosh_a-CustomTextualInputPort.obj `if test -f 'CustomTextualInputPort.cpp'; then $(CYGPATH_W) 'CustomTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualInputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualInputPort.cpp' object='libmosh_a-CustomTextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualInputPort.obj `if test -f 'CustomTextualInputPort.cpp'; then $(CYGPATH_W) 'CustomTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualInputPort.cpp'; fi`

libmosh_a-CustomTextualOutputPort.o: CustomTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Tpo -c -o libmosh_a-CustomTextualOutputPort.o `test -f 'CustomTextualOutputPort.cpp' || echo '$(srcdir)/'`CustomTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualOutputPort.cpp' object='libmosh_a-CustomTextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualOutputPort.o `test -f 'CustomTextualOutputPort.cpp' || echo '$(srcdir)/'`CustomTextualOutputPort.cpp

libmosh_a-CustomTextualOutputPort.obj: CustomTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Tpo -c -o libmosh_a-CustomTextualOutputPort.obj `if test -f 'CustomTextualOutputPort.cpp'; then $(CYGPATH_W) 'CustomTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualOutputPort.cpp' object='libmosh_a-CustomTextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualOutputPort.obj `if test -f 'CustomTextualOutputPort.cpp'; then $(CYGPATH_W) 'CustomTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualOutputPort.cpp'; fi`

libmosh_a-CustomTextualInputOutputPort.o: CustomTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualInputOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Tpo -c -o libmosh_a-CustomTextualInputOutputPort.o `test -f 'CustomTextualInputOutputPort.cpp' || echo '$(srcdir)/'`CustomTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualInputOutputPort.cpp' object='libmosh_a-CustomTextualInputOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualInputOutputPort.o `test -f 'CustomTextualInputOutputPort.cpp' || echo '$(srcdir)/'`CustomTextualInputOutputPort.cpp

libmosh_a-CustomTextualInputOutputPort.obj: CustomTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomTextualInputOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Tpo -c -o libmosh_a-CustomTextualInputOutputPort.obj `if test -f 'CustomTextualInputOutputPort.cpp'; then $(CYGPATH_W) 'CustomTextualInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualInputOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomTextualInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomTextualInputOutputPort.cpp' object='libmosh_a-CustomTextualInputOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomTextualInputOutputPort.obj `if test -f 'CustomTextualInputOutputPort.cpp'; then $(CYGPATH_W) 'CustomTextualInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomTextualInputOutputPort.cpp'; fi`

libmosh_a-CustomBinaryInputOutputPort.o: CustomBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryInputOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Tpo -c -o libmosh_a-CustomBinaryInputOutputPort.o `test -f 'CustomBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputOutputPort.cpp' object='libmosh_a-CustomBinaryInputOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryInputOutputPort.o `test -f 'CustomBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`CustomBinaryInputOutputPort.cpp

libmosh_a-CustomBinaryInputOutputPort.obj: CustomBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryInputOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Tpo -c -o libmosh_a-CustomBinaryInputOutputPort.obj `if test -f 'CustomBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryInputOutputPort.cpp' object='libmosh_a-CustomBinaryInputOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryInputOutputPort.obj `if test -f 'CustomBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryInputOutputPort.cpp'; fi`

libmosh_a-TextualOutputPort.o: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TextualOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-TextualOutputPort.Tpo -c -o libmosh_a-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TextualOutputPort.Tpo $(DEPDIR)/libmosh_a-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='libmosh_a-TextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TextualOutputPort.o `test -f 'TextualOutputPort.cpp' || echo '$(srcdir)/'`TextualOutputPort.cpp

libmosh_a-TextualOutputPort.obj: TextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TextualOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-TextualOutputPort.Tpo -c -o libmosh_a-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TextualOutputPort.Tpo $(DEPDIR)/libmosh_a-TextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualOutputPort.cpp' object='libmosh_a-TextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TextualOutputPort.obj `if test -f 'TextualOutputPort.cpp'; then $(CYGPATH_W) 'TextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualOutputPort.cpp'; fi`

libmosh_a-TextualInputPort.o: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TextualInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-TextualInputPort.Tpo -c -o libmosh_a-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TextualInputPort.Tpo $(DEPDIR)/libmosh_a-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='libmosh_a-TextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TextualInputPort.o `test -f 'TextualInputPort.cpp' || echo '$(srcdir)/'`TextualInputPort.cpp

libmosh_a-TextualInputPort.obj: TextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TextualInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-TextualInputPort.Tpo -c -o libmosh_a-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TextualInputPort.Tpo $(DEPDIR)/libmosh_a-TextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TextualInputPort.cpp' object='libmosh_a-TextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TextualInputPort.obj `if test -f 'TextualInputPort.cpp'; then $(CYGPATH_W) 'TextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TextualInputPort.cpp'; fi`

libmosh_a-TranscodedTextualInputPort.o: TranscodedTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Tpo -c -o libmosh_a-TranscodedTextualInputPort.o `test -f 'TranscodedTextualInputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualInputPort.cpp' object='libmosh_a-TranscodedTextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualInputPort.o `test -f 'TranscodedTextualInputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualInputPort.cpp

libmosh_a-TranscodedTextualInputPort.obj: TranscodedTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Tpo -c -o libmosh_a-TranscodedTextualInputPort.obj `if test -f 'TranscodedTextualInputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualInputPort.cpp' object='libmosh_a-TranscodedTextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualInputPort.obj `if test -f 'TranscodedTextualInputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualInputPort.cpp'; fi`

libmosh_a-TranscodedTextualOutputPort.o: TranscodedTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Tpo -c -o libmosh_a-TranscodedTextualOutputPort.o `test -f 'TranscodedTextualOutputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualOutputPort.cpp' object='libmosh_a-TranscodedTextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualOutputPort.o `test -f 'TranscodedTextualOutputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualOutputPort.cpp

libmosh_a-TranscodedTextualOutputPort.obj: TranscodedTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Tpo -c -o libmosh_a-TranscodedTextualOutputPort.obj `if test -f 'TranscodedTextualOutputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualOutputPort.cpp' object='libmosh_a-TranscodedTextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualOutputPort.obj `if test -f 'TranscodedTextualOutputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualOutputPort.cpp'; fi`

libmosh_a-StringTextualOutputPort.o: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringTextualOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-StringTextualOutputPort.Tpo -c -o libmosh_a-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='libmosh_a-StringTextualOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringTextualOutputPort.o `test -f 'StringTextualOutputPort.cpp' || echo '$(srcdir)/'`StringTextualOutputPort.cpp

libmosh_a-StringTextualOutputPort.obj: StringTextualOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringTextualOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-StringTextualOutputPort.Tpo -c -o libmosh_a-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringTextualOutputPort.Tpo $(DEPDIR)/libmosh_a-StringTextualOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualOutputPort.cpp' object='libmosh_a-StringTextualOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringTextualOutputPort.obj `if test -f 'StringTextualOutputPort.cpp'; then $(CYGPATH_W) 'StringTextualOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualOutputPort.cpp'; fi`

libmosh_a-StringTextualInputPort.o: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringTextualInputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-StringTextualInputPort.Tpo -c -o libmosh_a-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringTextualInputPort.Tpo $(DEPDIR)/libmosh_a-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='libmosh_a-StringTextualInputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringTextualInputPort.o `test -f 'StringTextualInputPort.cpp' || echo '$(srcdir)/'`StringTextualInputPort.cpp

libmosh_a-StringTextualInputPort.obj: StringTextualInputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringTextualInputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-StringTextualInputPort.Tpo -c -o libmosh_a-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringTextualInputPort.Tpo $(DEPDIR)/libmosh_a-StringTextualInputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTextualInputPort.cpp' object='libmosh_a-StringTextualInputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringTextualInputPort.obj `if test -f 'StringTextualInputPort.cpp'; then $(CYGPATH_W) 'StringTextualInputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/StringTextualInputPort.cpp'; fi`

libmosh_a-Codec.o: Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Codec.o -MD -MP -MF $(DEPDIR)/libmosh_a-Codec.Tpo -c -o libmosh_a-Codec.o `test -f 'Codec.cpp' || echo '$(srcdir)/'`Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Codec.Tpo $(DEPDIR)/libmosh_a-Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Codec.cpp' object='libmosh_a-Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Codec.o `test -f 'Codec.cpp' || echo '$(srcdir)/'`Codec.cpp

libmosh_a-Codec.obj: Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Codec.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Codec.Tpo -c -o libmosh_a-Codec.obj `if test -f 'Codec.cpp'; then $(CYGPATH_W) 'Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Codec.Tpo $(DEPDIR)/libmosh_a-Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Codec.cpp' object='libmosh_a-Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Codec.obj `if test -f 'Codec.cpp'; then $(CYGPATH_W) 'Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Codec.cpp'; fi`

libmosh_a-UTF8Codec.o: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF8Codec.o -MD -MP -MF $(DEPDIR)/libmosh_a-UTF8Codec.Tpo -c -o libmosh_a-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF8Codec.Tpo $(DEPDIR)/libmosh_a-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='libmosh_a-UTF8Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF8Codec.o `test -f 'UTF8Codec.cpp' || echo '$(srcdir)/'`UTF8Codec.cpp

libmosh_a-UTF8Codec.obj: UTF8Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF8Codec.obj -MD -MP -MF $(DEPDIR)/libmosh_a-UTF8Codec.Tpo -c -o libmosh_a-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF8Codec.Tpo $(DEPDIR)/libmosh_a-UTF8Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF8Codec.cpp' object='libmosh_a-UTF8Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF8Codec.obj `if test -f 'UTF8Codec.cpp'; then $(CYGPATH_W) 'UTF8Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF8Codec.cpp'; fi`

libmosh_a-UTF16Codec.o: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF16Codec.o -MD -MP -MF $(DEPDIR)/libmosh_a-UTF16Codec.Tpo -c -o libmosh_a-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF16Codec.Tpo $(DEPDIR)/libmosh_a-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='libmosh_a-UTF16Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF16Codec.o `test -f 'UTF16Codec.cpp' || echo '$(srcdir)/'`UTF16Codec.cpp

libmosh_a-UTF16Codec.obj: UTF16Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF16Codec.obj -MD -MP -MF $(DEPDIR)/libmosh_a-UTF16Codec.Tpo -c -o libmosh_a-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF16Codec.Tpo $(DEPDIR)/libmosh_a-UTF16Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF16Codec.cpp' object='libmosh_a-UTF16Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF16Codec.obj `if test -f 'UTF16Codec.cpp'; then $(CYGPATH_W) 'UTF16Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF16Codec.cpp'; fi`

libmosh_a-UTF32Codec.o: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF32Codec.o -MD -MP -MF $(DEPDIR)/libmosh_a-UTF32Codec.Tpo -c -o libmosh_a-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF32Codec.Tpo $(DEPDIR)/libmosh_a-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='libmosh_a-UTF32Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF32Codec.o `test -f 'UTF32Codec.cpp' || echo '$(srcdir)/'`UTF32Codec.cpp

libmosh_a-UTF32Codec.obj: UTF32Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-UTF32Codec.obj -MD -MP -MF $(DEPDIR)/libmosh_a-UTF32Codec.Tpo -c -o libmosh_a-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-UTF32Codec.Tpo $(DEPDIR)/libmosh_a-UTF32Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UTF32Codec.cpp' object='libmosh_a-UTF32Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-UTF32Codec.obj `if test -f 'UTF32Codec.cpp'; then $(CYGPATH_W) 'UTF32Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/UTF32Codec.cpp'; fi`

libmosh_a-EqHashTable.o: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-EqHashTable.o -MD -MP -MF $(DEPDIR)/libmosh_a-EqHashTable.Tpo -c -o libmosh_a-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-EqHashTable.Tpo $(DEPDIR)/libmosh_a-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='libmosh_a-EqHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-EqHashTable.o `test -f 'EqHashTable.cpp' || echo '$(srcdir)/'`EqHashTable.cpp

libmosh_a-EqHashTable.obj: EqHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-EqHashTable.obj -MD -MP -MF $(DEPDIR)/libmosh_a-EqHashTable.Tpo -c -o libmosh_a-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-EqHashTable.Tpo $(DEPDIR)/libmosh_a-EqHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EqHashTable.cpp' object='libmosh_a-EqHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-EqHashTable.obj `if test -f 'EqHashTable.cpp'; then $(CYGPATH_W) 'EqHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/EqHashTable.cpp'; fi`

libmosh_a-SString.o: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-SString.o -MD -MP -MF $(DEPDIR)/libmosh_a-SString.Tpo -c -o libmosh_a-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-SString.Tpo $(DEPDIR)/libmosh_a-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='libmosh_a-SString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-SString.o `test -f 'SString.cpp' || echo '$(srcdir)/'`SString.cpp

libmosh_a-SString.obj: SString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-SString.obj -MD -MP -MF $(DEPDIR)/libmosh_a-SString.Tpo -c -o libmosh_a-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-SString.Tpo $(DEPDIR)/libmosh_a-SString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SString.cpp' object='libmosh_a-SString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-SString.obj `if test -f 'SString.cpp'; then $(CYGPATH_W) 'SString.cpp'; else $(CYGPATH_W) '$(srcdir)/SString.cpp'; fi`

libmosh_a-GenericHashTable.o: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-GenericHashTable.o -MD -MP -MF $(DEPDIR)/libmosh_a-GenericHashTable.Tpo -c -o libmosh_a-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-GenericHashTable.Tpo $(DEPDIR)/libmosh_a-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='libmosh_a-GenericHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-GenericHashTable.o `test -f 'GenericHashTable.cpp' || echo '$(srcdir)/'`GenericHashTable.cpp

libmosh_a-GenericHashTable.obj: GenericHashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-GenericHashTable.obj -MD -MP -MF $(DEPDIR)/libmosh_a-GenericHashTable.Tpo -c -o libmosh_a-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-GenericHashTable.Tpo $(DEPDIR)/libmosh_a-GenericHashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GenericHashTable.cpp' object='libmosh_a-GenericHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-GenericHashTable.obj `if test -f 'GenericHashTable.cpp'; then $(CYGPATH_W) 'GenericHashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/GenericHashTable.cpp'; fi`

libmosh_a-Object.o: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Object.o -MD -MP -MF $(DEPDIR)/libmosh_a-Object.Tpo -c -o libmosh_a-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Object.Tpo $(DEPDIR)/libmosh_a-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='libmosh_a-Object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp

libmosh_a-Object.obj: Object.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Object.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Object.Tpo -c -o libmosh_a-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Object.Tpo $(DEPDIR)/libmosh_a-Object.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Object.cpp' object='libmosh_a-Object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`

libmosh_a-RecordTypeDescriptor.o: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordTypeDescriptor.o -MD -MP -MF $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Tpo -c -o libmosh_a-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Tpo $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='libmosh_a-RecordTypeDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordTypeDescriptor.o `test -f 'RecordTypeDescriptor.cpp' || echo '$(srcdir)/'`RecordTypeDescriptor.cpp

libmosh_a-RecordTypeDescriptor.obj: RecordTypeDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordTypeDescriptor.obj -MD -MP -MF $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Tpo -c -o libmosh_a-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Tpo $(DEPDIR)/libmosh_a-RecordTypeDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordTypeDescriptor.cpp' object='libmosh_a-RecordTypeDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordTypeDescriptor.obj `if test -f 'RecordTypeDescriptor.cpp'; then $(CYGPATH_W) 'RecordTypeDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordTypeDescriptor.cpp'; fi`

libmosh_a-RecordConstructorDescriptor.o: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordConstructorDescriptor.o -MD -MP -MF $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Tpo -c -o libmosh_a-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Tpo $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='libmosh_a-RecordConstructorDescriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordConstructorDescriptor.o `test -f 'RecordConstructorDescriptor.cpp' || echo '$(srcdir)/'`RecordConstructorDescriptor.cpp

libmosh_a-RecordConstructorDescriptor.obj: RecordConstructorDescriptor.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordConstructorDescriptor.obj -MD -MP -MF $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Tpo -c -o libmosh_a-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Tpo $(DEPDIR)/libmosh_a-RecordConstructorDescriptor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordConstructorDescriptor.cpp' object='libmosh_a-RecordConstructorDescriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordConstructorDescriptor.obj `if test -f 'RecordConstructorDescriptor.cpp'; then $(CYGPATH_W) 'RecordConstructorDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordConstructorDescriptor.cpp'; fi`

libmosh_a-Record.o: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Record.o -MD -MP -MF $(DEPDIR)/libmosh_a-Record.Tpo -c -o libmosh_a-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Record.Tpo $(DEPDIR)/libmosh_a-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='libmosh_a-Record.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Record.o `test -f 'Record.cpp' || echo '$(srcdir)/'`Record.cpp

libmosh_a-Record.obj: Record.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Record.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Record.Tpo -c -o libmosh_a-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Record.Tpo $(DEPDIR)/libmosh_a-Record.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Record.cpp' object='libmosh_a-Record.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Record.obj `if test -f 'Record.cpp'; then $(CYGPATH_W) 'Record.cpp'; else $(CYGPATH_W) '$(srcdir)/Record.cpp'; fi`

libmosh_a-RecordProcedures.o: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-RecordProcedures.Tpo -c -o libmosh_a-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordProcedures.Tpo $(DEPDIR)/libmosh_a-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='libmosh_a-RecordProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordProcedures.o `test -f 'RecordProcedures.cpp' || echo '$(srcdir)/'`RecordProcedures.cpp

libmosh_a-RecordProcedures.obj: RecordProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RecordProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-RecordProcedures.Tpo -c -o libmosh_a-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RecordProcedures.Tpo $(DEPDIR)/libmosh_a-RecordProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecordProcedures.cpp' object='libmosh_a-RecordProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RecordProcedures.obj `if test -f 'RecordProcedures.cpp'; then $(CYGPATH_W) 'RecordProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RecordProcedures.cpp'; fi`

libmosh_a-ConditionProcedures.o: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ConditionProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ConditionProcedures.Tpo -c -o libmosh_a-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ConditionProcedures.Tpo $(DEPDIR)/libmosh_a-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='libmosh_a-ConditionProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ConditionProcedures.o `test -f 'ConditionProcedures.cpp' || echo '$(srcdir)/'`ConditionProcedures.cpp

libmosh_a-ConditionProcedures.obj: ConditionProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ConditionProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ConditionProcedures.Tpo -c -o libmosh_a-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ConditionProcedures.Tpo $(DEPDIR)/libmosh_a-ConditionProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConditionProcedures.cpp' object='libmosh_a-ConditionProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ConditionProcedures.obj `if test -f 'ConditionProcedures.cpp'; then $(CYGPATH_W) 'ConditionProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ConditionProcedures.cpp'; fi`

libmosh_a-CompilerProcedures.o: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CompilerProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-CompilerProcedures.Tpo -c -o libmosh_a-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CompilerProcedures.Tpo $(DEPDIR)/libmosh_a-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='libmosh_a-CompilerProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CompilerProcedures.o `test -f 'CompilerProcedures.cpp' || echo '$(srcdir)/'`CompilerProcedures.cpp

libmosh_a-CompilerProcedures.obj: CompilerProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CompilerProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CompilerProcedures.Tpo -c -o libmosh_a-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CompilerProcedures.Tpo $(DEPDIR)/libmosh_a-CompilerProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompilerProcedures.cpp' object='libmosh_a-CompilerProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CompilerProcedures.obj `if test -f 'CompilerProcedures.cpp'; then $(CYGPATH_W) 'CompilerProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/CompilerProcedures.cpp'; fi`

libmosh_a-HashTableProceduures.o: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-HashTableProceduures.o -MD -MP -MF $(DEPDIR)/libmosh_a-HashTableProceduures.Tpo -c -o libmosh_a-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-HashTableProceduures.Tpo $(DEPDIR)/libmosh_a-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='libmosh_a-HashTableProceduures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-HashTableProceduures.o `test -f 'HashTableProceduures.cpp' || echo '$(srcdir)/'`HashTableProceduures.cpp

libmosh_a-HashTableProceduures.obj: HashTableProceduures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-HashTableProceduures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-HashTableProceduures.Tpo -c -o libmosh_a-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-HashTableProceduures.Tpo $(DEPDIR)/libmosh_a-HashTableProceduures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HashTableProceduures.cpp' object='libmosh_a-HashTableProceduures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-HashTableProceduures.obj `if test -f 'HashTableProceduures.cpp'; then $(CYGPATH_W) 'HashTableProceduures.cpp'; else $(CYGPATH_W) '$(srcdir)/HashTableProceduures.cpp'; fi`

libmosh_a-RegexpProcedures.o: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RegexpProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-RegexpProcedures.Tpo -c -o libmosh_a-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RegexpProcedures.Tpo $(DEPDIR)/libmosh_a-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='libmosh_a-RegexpProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RegexpProcedures.o `test -f 'RegexpProcedures.cpp' || echo '$(srcdir)/'`RegexpProcedures.cpp

libmosh_a-RegexpProcedures.obj: RegexpProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-RegexpProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-RegexpProcedures.Tpo -c -o libmosh_a-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-RegexpProcedures.Tpo $(DEPDIR)/libmosh_a-RegexpProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegexpProcedures.cpp' object='libmosh_a-RegexpProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-RegexpProcedures.obj `if test -f 'RegexpProcedures.cpp'; then $(CYGPATH_W) 'RegexpProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/RegexpProcedures.cpp'; fi`

libmosh_a-StringProcedures.o: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-StringProcedures.Tpo -c -o libmosh_a-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringProcedures.Tpo $(DEPDIR)/libmosh_a-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='libmosh_a-StringProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringProcedures.o `test -f 'StringProcedures.cpp' || echo '$(srcdir)/'`StringProcedures.cpp

libmosh_a-StringProcedures.obj: StringProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-StringProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-StringProcedures.Tpo -c -o libmosh_a-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-StringProcedures.Tpo $(DEPDIR)/libmosh_a-StringProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringProcedures.cpp' object='libmosh_a-StringProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-StringProcedures.obj `if test -f 'StringProcedures.cpp'; then $(CYGPATH_W) 'StringProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/StringProcedures.cpp'; fi`

libmosh_a-PortProcedures.o: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-PortProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-PortProcedures.Tpo -c -o libmosh_a-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-PortProcedures.Tpo $(DEPDIR)/libmosh_a-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='libmosh_a-PortProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-PortProcedures.o `test -f 'PortProcedures.cpp' || echo '$(srcdir)/'`PortProcedures.cpp

libmosh_a-PortProcedures.obj: PortProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-PortProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-PortProcedures.Tpo -c -o libmosh_a-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-PortProcedures.Tpo $(DEPDIR)/libmosh_a-PortProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortProcedures.cpp' object='libmosh_a-PortProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-PortProcedures.obj `if test -f 'PortProcedures.cpp'; then $(CYGPATH_W) 'PortProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/PortProcedures.cpp'; fi`

libmosh_a-ListProcedures.o: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ListProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ListProcedures.Tpo -c -o libmosh_a-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ListProcedures.Tpo $(DEPDIR)/libmosh_a-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='libmosh_a-ListProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ListProcedures.o `test -f 'ListProcedures.cpp' || echo '$(srcdir)/'`ListProcedures.cpp

libmosh_a-ListProcedures.obj: ListProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ListProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ListProcedures.Tpo -c -o libmosh_a-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ListProcedures.Tpo $(DEPDIR)/libmosh_a-ListProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListProcedures.cpp' object='libmosh_a-ListProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ListProcedures.obj `if test -f 'ListProcedures.cpp'; then $(CYGPATH_W) 'ListProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ListProcedures.cpp'; fi`

libmosh_a-ErrorProcedures.o: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ErrorProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ErrorProcedures.Tpo -c -o libmosh_a-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ErrorProcedures.Tpo $(DEPDIR)/libmosh_a-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='libmosh_a-ErrorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ErrorProcedures.o `test -f 'ErrorProcedures.cpp' || echo '$(srcdir)/'`ErrorProcedures.cpp

libmosh_a-ErrorProcedures.obj: ErrorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ErrorProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ErrorProcedures.Tpo -c -o libmosh_a-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ErrorProcedures.Tpo $(DEPDIR)/libmosh_a-ErrorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ErrorProcedures.cpp' object='libmosh_a-ErrorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ErrorProcedures.obj `if test -f 'ErrorProcedures.cpp'; then $(CYGPATH_W) 'ErrorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ErrorProcedures.cpp'; fi`

libmosh_a-ArithmeticProcedures.o: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ArithmeticProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ArithmeticProcedures.Tpo -c -o libmosh_a-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ArithmeticProcedures.Tpo $(DEPDIR)/libmosh_a-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='libmosh_a-ArithmeticProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ArithmeticProcedures.o `test -f 'ArithmeticProcedures.cpp' || echo '$(srcdir)/'`ArithmeticProcedures.cpp

libmosh_a-ArithmeticProcedures.obj: ArithmeticProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ArithmeticProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ArithmeticProcedures.Tpo -c -o libmosh_a-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ArithmeticProcedures.Tpo $(DEPDIR)/libmosh_a-ArithmeticProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ArithmeticProcedures.cpp' object='libmosh_a-ArithmeticProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ArithmeticProcedures.obj `if test -f 'ArithmeticProcedures.cpp'; then $(CYGPATH_W) 'ArithmeticProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ArithmeticProcedures.cpp'; fi`

libmosh_a-FlonumProcedures.o: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FlonumProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-FlonumProcedures.Tpo -c -o libmosh_a-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FlonumProcedures.Tpo $(DEPDIR)/libmosh_a-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='libmosh_a-FlonumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FlonumProcedures.o `test -f 'FlonumProcedures.cpp' || echo '$(srcdir)/'`FlonumProcedures.cpp

libmosh_a-FlonumProcedures.obj: FlonumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FlonumProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FlonumProcedures.Tpo -c -o libmosh_a-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FlonumProcedures.Tpo $(DEPDIR)/libmosh_a-FlonumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FlonumProcedures.cpp' object='libmosh_a-FlonumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FlonumProcedures.obj `if test -f 'FlonumProcedures.cpp'; then $(CYGPATH_W) 'FlonumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FlonumProcedures.cpp'; fi`

libmosh_a-BitwiseProcedures.o: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BitwiseProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-BitwiseProcedures.Tpo -c -o libmosh_a-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BitwiseProcedures.Tpo $(DEPDIR)/libmosh_a-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='libmosh_a-BitwiseProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BitwiseProcedures.o `test -f 'BitwiseProcedures.cpp' || echo '$(srcdir)/'`BitwiseProcedures.cpp

libmosh_a-BitwiseProcedures.obj: BitwiseProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BitwiseProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-BitwiseProcedures.Tpo -c -o libmosh_a-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BitwiseProcedures.Tpo $(DEPDIR)/libmosh_a-BitwiseProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitwiseProcedures.cpp' object='libmosh_a-BitwiseProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BitwiseProcedures.obj `if test -f 'BitwiseProcedures.cpp'; then $(CYGPATH_W) 'BitwiseProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/BitwiseProcedures.cpp'; fi`

libmosh_a-ByteVectorProcedures.o: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteVectorProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-ByteVectorProcedures.Tpo -c -o libmosh_a-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteVectorProcedures.Tpo $(DEPDIR)/libmosh_a-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='libmosh_a-ByteVectorProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteVectorProcedures.o `test -f 'ByteVectorProcedures.cpp' || echo '$(srcdir)/'`ByteVectorProcedures.cpp

libmosh_a-ByteVectorProcedures.obj: ByteVectorProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ByteVectorProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ByteVectorProcedures.Tpo -c -o libmosh_a-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ByteVectorProcedures.Tpo $(DEPDIR)/libmosh_a-ByteVectorProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ByteVectorProcedures.cpp' object='libmosh_a-ByteVectorProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ByteVectorProcedures.obj `if test -f 'ByteVectorProcedures.cpp'; then $(CYGPATH_W) 'ByteVectorProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/ByteVectorProcedures.cpp'; fi`

libmosh_a-Equivalent.o: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Equivalent.o -MD -MP -MF $(DEPDIR)/libmosh_a-Equivalent.Tpo -c -o libmosh_a-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Equivalent.Tpo $(DEPDIR)/libmosh_a-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='libmosh_a-Equivalent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Equivalent.o `test -f 'Equivalent.cpp' || echo '$(srcdir)/'`Equivalent.cpp

libmosh_a-Equivalent.obj: Equivalent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Equivalent.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Equivalent.Tpo -c -o libmosh_a-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Equivalent.Tpo $(DEPDIR)/libmosh_a-Equivalent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Equivalent.cpp' object='libmosh_a-Equivalent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Equivalent.obj `if test -f 'Equivalent.cpp'; then $(CYGPATH_W) 'Equivalent.cpp'; else $(CYGPATH_W) '$(srcdir)/Equivalent.cpp'; fi`

libmosh_a-CompoundCondition.o: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CompoundCondition.o -MD -MP -MF $(DEPDIR)/libmosh_a-CompoundCondition.Tpo -c -o libmosh_a-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CompoundCondition.Tpo $(DEPDIR)/libmosh_a-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='libmosh_a-CompoundCondition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CompoundCondition.o `test -f 'CompoundCondition.cpp' || echo '$(srcdir)/'`CompoundCondition.cpp

libmosh_a-CompoundCondition.obj: CompoundCondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CompoundCondition.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CompoundCondition.Tpo -c -o libmosh_a-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CompoundCondition.Tpo $(DEPDIR)/libmosh_a-CompoundCondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundCondition.cpp' object='libmosh_a-CompoundCondition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CompoundCondition.obj `if test -f 'CompoundCondition.cpp'; then $(CYGPATH_W) 'CompoundCondition.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundCondition.cpp'; fi`

libmosh_a-ucs4string.o: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ucs4string.o -MD -MP -MF $(DEPDIR)/libmosh_a-ucs4string.Tpo -c -o libmosh_a-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ucs4string.Tpo $(DEPDIR)/libmosh_a-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='libmosh_a-ucs4string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ucs4string.o `test -f 'ucs4string.cpp' || echo '$(srcdir)/'`ucs4string.cpp

libmosh_a-ucs4string.obj: ucs4string.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-ucs4string.obj -MD -MP -MF $(DEPDIR)/libmosh_a-ucs4string.Tpo -c -o libmosh_a-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-ucs4string.Tpo $(DEPDIR)/libmosh_a-ucs4string.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ucs4string.cpp' object='libmosh_a-ucs4string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-ucs4string.obj `if test -f 'ucs4string.cpp'; then $(CYGPATH_W) 'ucs4string.cpp'; else $(CYGPATH_W) '$(srcdir)/ucs4string.cpp'; fi`

libmosh_a-Vector.o: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Vector.o -MD -MP -MF $(DEPDIR)/libmosh_a-Vector.Tpo -c -o libmosh_a-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Vector.Tpo $(DEPDIR)/libmosh_a-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='libmosh_a-Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Vector.o `test -f 'Vector.cpp' || echo '$(srcdir)/'`Vector.cpp

libmosh_a-Vector.obj: Vector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Vector.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Vector.Tpo -c -o libmosh_a-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Vector.Tpo $(DEPDIR)/libmosh_a-Vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Vector.cpp' object='libmosh_a-Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Vector.obj `if test -f 'Vector.cpp'; then $(CYGPATH_W) 'Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Vector.cpp'; fi`

libmosh_a-Fasl.o: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Fasl.o -MD -MP -MF $(DEPDIR)/libmosh_a-Fasl.Tpo -c -o libmosh_a-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Fasl.Tpo $(DEPDIR)/libmosh_a-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='libmosh_a-Fasl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Fasl.o `test -f 'Fasl.cpp' || echo '$(srcdir)/'`Fasl.cpp

libmosh_a-Fasl.obj: Fasl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Fasl.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Fasl.Tpo -c -o libmosh_a-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Fasl.Tpo $(DEPDIR)/libmosh_a-Fasl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fasl.cpp' object='libmosh_a-Fasl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Fasl.obj `if test -f 'Fasl.cpp'; then $(CYGPATH_W) 'Fasl.cpp'; else $(CYGPATH_W) '$(srcdir)/Fasl.cpp'; fi`

libmosh_a-Arithmetic.o: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Arithmetic.o -MD -MP -MF $(DEPDIR)/libmosh_a-Arithmetic.Tpo -c -o libmosh_a-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Arithmetic.Tpo $(DEPDIR)/libmosh_a-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='libmosh_a-Arithmetic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Arithmetic.o `test -f 'Arithmetic.cpp' || echo '$(srcdir)/'`Arithmetic.cpp

libmosh_a-Arithmetic.obj: Arithmetic.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Arithmetic.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Arithmetic.Tpo -c -o libmosh_a-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Arithmetic.Tpo $(DEPDIR)/libmosh_a-Arithmetic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arithmetic.cpp' object='libmosh_a-Arithmetic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Arithmetic.obj `if test -f 'Arithmetic.cpp'; then $(CYGPATH_W) 'Arithmetic.cpp'; else $(CYGPATH_W) '$(srcdir)/Arithmetic.cpp'; fi`

libmosh_a-Ratnum.o: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Ratnum.o -MD -MP -MF $(DEPDIR)/libmosh_a-Ratnum.Tpo -c -o libmosh_a-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Ratnum.Tpo $(DEPDIR)/libmosh_a-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='libmosh_a-Ratnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Ratnum.o `test -f 'Ratnum.cpp' || echo '$(srcdir)/'`Ratnum.cpp

libmosh_a-Ratnum.obj: Ratnum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Ratnum.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Ratnum.Tpo -c -o libmosh_a-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Ratnum.Tpo $(DEPDIR)/libmosh_a-Ratnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Ratnum.cpp' object='libmosh_a-Ratnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Ratnum.obj `if test -f 'Ratnum.cpp'; then $(CYGPATH_W) 'Ratnum.cpp'; else $(CYGPATH_W) '$(srcdir)/Ratnum.cpp'; fi`

libmosh_a-Bignum.o: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Bignum.o -MD -MP -MF $(DEPDIR)/libmosh_a-Bignum.Tpo -c -o libmosh_a-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Bignum.Tpo $(DEPDIR)/libmosh_a-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='libmosh_a-Bignum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Bignum.o `test -f 'Bignum.cpp' || echo '$(srcdir)/'`Bignum.cpp

libmosh_a-Bignum.obj: Bignum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Bignum.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Bignum.Tpo -c -o libmosh_a-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Bignum.Tpo $(DEPDIR)/libmosh_a-Bignum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bignum.cpp' object='libmosh_a-Bignum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Bignum.obj `if test -f 'Bignum.cpp'; then $(CYGPATH_W) 'Bignum.cpp'; else $(CYGPATH_W) '$(srcdir)/Bignum.cpp'; fi`

libmosh_a-Flonum.o: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Flonum.o -MD -MP -MF $(DEPDIR)/libmosh_a-Flonum.Tpo -c -o libmosh_a-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Flonum.Tpo $(DEPDIR)/libmosh_a-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='libmosh_a-Flonum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Flonum.o `test -f 'Flonum.cpp' || echo '$(srcdir)/'`Flonum.cpp

libmosh_a-Flonum.obj: Flonum.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Flonum.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Flonum.Tpo -c -o libmosh_a-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Flonum.Tpo $(DEPDIR)/libmosh_a-Flonum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Flonum.cpp' object='libmosh_a-Flonum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Flonum.obj `if test -f 'Flonum.cpp'; then $(CYGPATH_W) 'Flonum.cpp'; else $(CYGPATH_W) '$(srcdir)/Flonum.cpp'; fi`

libmosh_a-CodeBuilder.o: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CodeBuilder.o -MD -MP -MF $(DEPDIR)/libmosh_a-CodeBuilder.Tpo -c -o libmosh_a-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CodeBuilder.Tpo $(DEPDIR)/libmosh_a-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='libmosh_a-CodeBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CodeBuilder.o `test -f 'CodeBuilder.cpp' || echo '$(srcdir)/'`CodeBuilder.cpp

libmosh_a-CodeBuilder.obj: CodeBuilder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CodeBuilder.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CodeBuilder.Tpo -c -o libmosh_a-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CodeBuilder.Tpo $(DEPDIR)/libmosh_a-CodeBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CodeBuilder.cpp' object='libmosh_a-CodeBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CodeBuilder.obj `if test -f 'CodeBuilder.cpp'; then $(CYGPATH_W) 'CodeBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/CodeBuilder.cpp'; fi`

libmosh_a-FixnumProcedures.o: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FixnumProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-FixnumProcedures.Tpo -c -o libmosh_a-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FixnumProcedures.Tpo $(DEPDIR)/libmosh_a-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='libmosh_a-FixnumProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FixnumProcedures.o `test -f 'FixnumProcedures.cpp' || echo '$(srcdir)/'`FixnumProcedures.cpp

libmosh_a-FixnumProcedures.obj: FixnumProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FixnumProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FixnumProcedures.Tpo -c -o libmosh_a-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FixnumProcedures.Tpo $(DEPDIR)/libmosh_a-FixnumProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FixnumProcedures.cpp' object='libmosh_a-FixnumProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FixnumProcedures.obj `if test -f 'FixnumProcedures.cpp'; then $(CYGPATH_W) 'FixnumProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FixnumProcedures.cpp'; fi`

libmosh_a-Latin1Codec.o: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Latin1Codec.o -MD -MP -MF $(DEPDIR)/libmosh_a-Latin1Codec.Tpo -c -o libmosh_a-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Latin1Codec.Tpo $(DEPDIR)/libmosh_a-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='libmosh_a-Latin1Codec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Latin1Codec.o `test -f 'Latin1Codec.cpp' || echo '$(srcdir)/'`Latin1Codec.cpp

libmosh_a-Latin1Codec.obj: Latin1Codec.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-Latin1Codec.obj -MD -MP -MF $(DEPDIR)/libmosh_a-Latin1Codec.Tpo -c -o libmosh_a-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-Latin1Codec.Tpo $(DEPDIR)/libmosh_a-Latin1Codec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Latin1Codec.cpp' object='libmosh_a-Latin1Codec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-Latin1Codec.obj `if test -f 'Latin1Codec.cpp'; then $(CYGPATH_W) 'Latin1Codec.cpp'; else $(CYGPATH_W) '$(srcdir)/Latin1Codec.cpp'; fi`

libmosh_a-FFI.o: FFI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FFI.o -MD -MP -MF $(DEPDIR)/libmosh_a-FFI.Tpo -c -o libmosh_a-FFI.o `test -f 'FFI.cpp' || echo '$(srcdir)/'`FFI.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FFI.Tpo $(DEPDIR)/libmosh_a-FFI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFI.cpp' object='libmosh_a-FFI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FFI.o `test -f 'FFI.cpp' || echo '$(srcdir)/'`FFI.cpp

libmosh_a-FFI.obj: FFI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FFI.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FFI.Tpo -c -o libmosh_a-FFI.obj `if test -f 'FFI.cpp'; then $(CYGPATH_W) 'FFI.cpp'; else $(CYGPATH_W) '$(srcdir)/FFI.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FFI.Tpo $(DEPDIR)/libmosh_a-FFI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFI.cpp' object='libmosh_a-FFI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FFI.obj `if test -f 'FFI.cpp'; then $(CYGPATH_W) 'FFI.cpp'; else $(CYGPATH_W) '$(srcdir)/FFI.cpp'; fi`

libmosh_a-FFIProcedures.o: FFIProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FFIProcedures.o -MD -MP -MF $(DEPDIR)/libmosh_a-FFIProcedures.Tpo -c -o libmosh_a-FFIProcedures.o `test -f 'FFIProcedures.cpp' || echo '$(srcdir)/'`FFIProcedures.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FFIProcedures.Tpo $(DEPDIR)/libmosh_a-FFIProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFIProcedures.cpp' object='libmosh_a-FFIProcedures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FFIProcedures.o `test -f 'FFIProcedures.cpp' || echo '$(srcdir)/'`FFIProcedures.cpp

libmosh_a-FFIProcedures.obj: FFIProcedures.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FFIProcedures.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FFIProcedures.Tpo -c -o libmosh_a-FFIProcedures.obj `if test -f 'FFIProcedures.cpp'; then $(CYGPATH_W) 'FFIProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FFIProcedures.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FFIProcedures.Tpo $(DEPDIR)/libmosh_a-FFIProcedures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFIProcedures.cpp' object='libmosh_a-FFIProcedures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FFIProcedures.obj `if test -f 'FFIProcedures.cpp'; then $(CYGPATH_W) 'FFIProcedures.cpp'; else $(CYGPATH_W) '$(srcdir)/FFIProcedures.cpp'; fi`

libmosh_a-CustomBinaryOutputPort.o: CustomBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Tpo -c -o libmosh_a-CustomBinaryOutputPort.o `test -f 'CustomBinaryOutputPort.cpp' || echo '$(srcdir)/'`CustomBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryOutputPort.cpp' object='libmosh_a-CustomBinaryOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryOutputPort.o `test -f 'CustomBinaryOutputPort.cpp' || echo '$(srcdir)/'`CustomBinaryOutputPort.cpp

libmosh_a-CustomBinaryOutputPort.obj: CustomBinaryOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-CustomBinaryOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Tpo -c -o libmosh_a-CustomBinaryOutputPort.obj `if test -f 'CustomBinaryOutputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Tpo $(DEPDIR)/libmosh_a-CustomBinaryOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CustomBinaryOutputPort.cpp' object='libmosh_a-CustomBinaryOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-CustomBinaryOutputPort.obj `if test -f 'CustomBinaryOutputPort.cpp'; then $(CYGPATH_W) 'CustomBinaryOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/CustomBinaryOutputPort.cpp'; fi`

libmosh_a-FileBinaryInputOutputPort.o: FileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryInputOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Tpo -c -o libmosh_a-FileBinaryInputOutputPort.o `test -f 'FileBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputOutputPort.cpp' object='libmosh_a-FileBinaryInputOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryInputOutputPort.o `test -f 'FileBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`FileBinaryInputOutputPort.cpp

libmosh_a-FileBinaryInputOutputPort.obj: FileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-FileBinaryInputOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Tpo -c -o libmosh_a-FileBinaryInputOutputPort.obj `if test -f 'FileBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-FileBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FileBinaryInputOutputPort.cpp' object='libmosh_a-FileBinaryInputOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-FileBinaryInputOutputPort.obj `if test -f 'FileBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'FileBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/FileBinaryInputOutputPort.cpp'; fi`

libmosh_a-TranscodedTextualInputOutputPort.o: TranscodedTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualInputOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Tpo -c -o libmosh_a-TranscodedTextualInputOutputPort.o `test -f 'TranscodedTextualInputOutputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualInputOutputPort.cpp' object='libmosh_a-TranscodedTextualInputOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualInputOutputPort.o `test -f 'TranscodedTextualInputOutputPort.cpp' || echo '$(srcdir)/'`TranscodedTextualInputOutputPort.cpp

libmosh_a-TranscodedTextualInputOutputPort.obj: TranscodedTextualInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-TranscodedTextualInputOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Tpo -c -o libmosh_a-TranscodedTextualInputOutputPort.obj `if test -f 'TranscodedTextualInputOutputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualInputOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Tpo $(DEPDIR)/libmosh_a-TranscodedTextualInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TranscodedTextualInputOutputPort.cpp' object='libmosh_a-TranscodedTextualInputOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-TranscodedTextualInputOutputPort.obj `if test -f 'TranscodedTextualInputOutputPort.cpp'; then $(CYGPATH_W) 'TranscodedTextualInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/TranscodedTextualInputOutputPort.cpp'; fi`

libmosh_a-BufferedFileBinaryInputOutputPort.o: BufferedFileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryInputOutputPort.o -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Tpo -c -o libmosh_a-BufferedFileBinaryInputOutputPort.o `test -f 'BufferedFileBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryInputOutputPort.cpp' object='libmosh_a-BufferedFileBinaryInputOutputPort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryInputOutputPort.o `test -f 'BufferedFileBinaryInputOutputPort.cpp' || echo '$(srcdir)/'`BufferedFileBinaryInputOutputPort.cpp

libmosh_a-BufferedFileBinaryInputOutputPort.obj: BufferedFileBinaryInputOutputPort.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -MT libmosh_a-BufferedFileBinaryInputOutputPort.obj -MD -MP -MF $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Tpo -c -o libmosh_a-BufferedFileBinaryInputOutputPort.obj `if test -f 'BufferedFileBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryInputOutputPort.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Tpo $(DEPDIR)/libmosh_a-BufferedFileBinaryInputOutputPort.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BufferedFileBinaryInputOutputPort.cpp' object='libmosh_a-BufferedFileBinaryInputOutputPort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmosh_a_CXXFLAGS) $(CXXFLAGS) -c -o libmosh_a-BufferedFileBinaryInputOutputPort.obj `if test -f 'BufferedFileBinaryInputOutputPort.cpp'; then $(CYGPATH_W) 'BufferedFileBinaryInputOutputPort.cpp'; else $(CYGPATH_W) '$(srcdir)/BufferedFileBinaryInputOutputPort.cpp'; fi`

mosh-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-main.o -MD -MP -MF $(DEPDIR)/mosh-main.Tpo -c -o mosh-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-main.Tpo $(DEPDIR)/mosh-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='mosh-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

mosh-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -MT mosh-main.obj -MD -MP -MF $(DEPDIR)/mosh-main.Tpo -c -o mosh-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mosh-main.Tpo $(DEPDIR)/mosh-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='mosh-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mosh_CXXFLAGS) $(CXXFLAGS) -c -o mosh-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

test_fasl-FaslTest.o: FaslTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-FaslTest.o -MD -MP -MF $(DEPDIR)/test_fasl-FaslTest.Tpo -c -o test_fasl-FaslTest.o `test -f 'FaslTest.cpp' || echo '$(srcdir)/'`FaslTest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-FaslTest.Tpo $(DEPDIR)/test_fasl-FaslTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FaslTest.cpp' object='test_fasl-FaslTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-FaslTest.o `test -f 'FaslTest.cpp' || echo '$(srcdir)/'`FaslTest.cpp

test_fasl-FaslTest.obj: FaslTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-FaslTest.obj -MD -MP -MF $(DEPDIR)/test_fasl-FaslTest.Tpo -c -o test_fasl-FaslTest.obj `if test -f 'FaslTest.cpp'; then $(CYGPATH_W) 'FaslTest.cpp'; else $(CYGPATH_W) '$(srcdir)/FaslTest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-FaslTest.Tpo $(DEPDIR)/test_fasl-FaslTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FaslTest.cpp' object='test_fasl-FaslTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-FaslTest.obj `if test -f 'FaslTest.cpp'; then $(CYGPATH_W) 'FaslTest.cpp'; else $(CYGPATH_W) '$(srcdir)/FaslTest.cpp'; fi`

test_fasl-TestingSignalHandler.o: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-TestingSignalHandler.o -MD -MP -MF $(DEPDIR)/test_fasl-TestingSignalHandler.Tpo -c -o test_fasl-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-TestingSignalHandler.Tpo $(DEPDIR)/test_fasl-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_fasl-TestingSignalHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp

test_fasl-TestingSignalHandler.obj: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-TestingSignalHandler.obj -MD -MP -MF $(DEPDIR)/test_fasl-TestingSignalHandler.Tpo -c -o test_fasl-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-TestingSignalHandler.Tpo $(DEPDIR)/test_fasl-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_fasl-TestingSignalHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`

test_fasl-TestingVM.o: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-TestingVM.o -MD -MP -MF $(DEPDIR)/test_fasl-TestingVM.Tpo -c -o test_fasl-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-TestingVM.Tpo $(DEPDIR)/test_fasl-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_fasl-TestingVM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp

test_fasl-TestingVM.obj: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -MT test_fasl-TestingVM.obj -MD -MP -MF $(DEPDIR)/test_fasl-TestingVM.Tpo -c -o test_fasl-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_fasl-TestingVM.Tpo $(DEPDIR)/test_fasl-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_fasl-TestingVM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fasl_CXXFLAGS) $(CXXFLAGS) -c -o test_fasl-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`

test_ffi-FFITest.o: FFITest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-FFITest.o -MD -MP -MF $(DEPDIR)/test_ffi-FFITest.Tpo -c -o test_ffi-FFITest.o `test -f 'FFITest.cpp' || echo '$(srcdir)/'`FFITest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-FFITest.Tpo $(DEPDIR)/test_ffi-FFITest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFITest.cpp' object='test_ffi-FFITest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-FFITest.o `test -f 'FFITest.cpp' || echo '$(srcdir)/'`FFITest.cpp

test_ffi-FFITest.obj: FFITest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-FFITest.obj -MD -MP -MF $(DEPDIR)/test_ffi-FFITest.Tpo -c -o test_ffi-FFITest.obj `if test -f 'FFITest.cpp'; then $(CYGPATH_W) 'FFITest.cpp'; else $(CYGPATH_W) '$(srcdir)/FFITest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-FFITest.Tpo $(DEPDIR)/test_ffi-FFITest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FFITest.cpp' object='test_ffi-FFITest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-FFITest.obj `if test -f 'FFITest.cpp'; then $(CYGPATH_W) 'FFITest.cpp'; else $(CYGPATH_W) '$(srcdir)/FFITest.cpp'; fi`

test_ffi-TestingSignalHandler.o: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-TestingSignalHandler.o -MD -MP -MF $(DEPDIR)/test_ffi-TestingSignalHandler.Tpo -c -o test_ffi-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-TestingSignalHandler.Tpo $(DEPDIR)/test_ffi-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_ffi-TestingSignalHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp

test_ffi-TestingSignalHandler.obj: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-TestingSignalHandler.obj -MD -MP -MF $(DEPDIR)/test_ffi-TestingSignalHandler.Tpo -c -o test_ffi-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-TestingSignalHandler.Tpo $(DEPDIR)/test_ffi-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_ffi-TestingSignalHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`

test_ffi-TestingVM.o: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-TestingVM.o -MD -MP -MF $(DEPDIR)/test_ffi-TestingVM.Tpo -c -o test_ffi-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-TestingVM.Tpo $(DEPDIR)/test_ffi-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_ffi-TestingVM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp

test_ffi-TestingVM.obj: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -MT test_ffi-TestingVM.obj -MD -MP -MF $(DEPDIR)/test_ffi-TestingVM.Tpo -c -o test_ffi-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_ffi-TestingVM.Tpo $(DEPDIR)/test_ffi-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_ffi-TestingVM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ffi_CXXFLAGS) $(CXXFLAGS) -c -o test_ffi-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`

test_object-ObjectTest.o: ObjectTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -MT test_object-ObjectTest.o -MD -MP -MF $(DEPDIR)/test_object-ObjectTest.Tpo -c -o test_object-ObjectTest.o `test -f 'ObjectTest.cpp' || echo '$(srcdir)/'`ObjectTest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_object-ObjectTest.Tpo $(DEPDIR)/test_object-ObjectTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ObjectTest.cpp' object='test_object-ObjectTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -c -o test_object-ObjectTest.o `test -f 'ObjectTest.cpp' || echo '$(srcdir)/'`ObjectTest.cpp

test_object-ObjectTest.obj: ObjectTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -MT test_object-ObjectTest.obj -MD -MP -MF $(DEPDIR)/test_object-ObjectTest.Tpo -c -o test_object-ObjectTest.obj `if test -f 'ObjectTest.cpp'; then $(CYGPATH_W) 'ObjectTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ObjectTest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_object-ObjectTest.Tpo $(DEPDIR)/test_object-ObjectTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ObjectTest.cpp' object='test_object-ObjectTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -c -o test_object-ObjectTest.obj `if test -f 'ObjectTest.cpp'; then $(CYGPATH_W) 'ObjectTest.cpp'; else $(CYGPATH_W) '$(srcdir)/ObjectTest.cpp'; fi`

test_object-TestingSignalHandler.o: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -MT test_object-TestingSignalHandler.o -MD -MP -MF $(DEPDIR)/test_object-TestingSignalHandler.Tpo -c -o test_object-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_object-TestingSignalHandler.Tpo $(DEPDIR)/test_object-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_object-TestingSignalHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -c -o test_object-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp

test_object-TestingSignalHandler.obj: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -MT test_object-TestingSignalHandler.obj -MD -MP -MF $(DEPDIR)/test_object-TestingSignalHandler.Tpo -c -o test_object-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_object-TestingSignalHandler.Tpo $(DEPDIR)/test_object-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_object-TestingSignalHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_object_CXXFLAGS) $(CXXFLAGS) -c -o test_object-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`

test_port-PortTest.o: PortTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -MT test_port-PortTest.o -MD -MP -MF $(DEPDIR)/test_port-PortTest.Tpo -c -o test_port-PortTest.o `test -f 'PortTest.cpp' || echo '$(srcdir)/'`PortTest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_port-PortTest.Tpo $(DEPDIR)/test_port-PortTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortTest.cpp' object='test_port-PortTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -c -o test_port-PortTest.o `test -f 'PortTest.cpp' || echo '$(srcdir)/'`PortTest.cpp

test_port-PortTest.obj: PortTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -MT test_port-PortTest.obj -MD -MP -MF $(DEPDIR)/test_port-PortTest.Tpo -c -o test_port-PortTest.obj `if test -f 'PortTest.cpp'; then $(CYGPATH_W) 'PortTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PortTest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_port-PortTest.Tpo $(DEPDIR)/test_port-PortTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PortTest.cpp' object='test_port-PortTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -c -o test_port-PortTest.obj `if test -f 'PortTest.cpp'; then $(CYGPATH_W) 'PortTest.cpp'; else $(CYGPATH_W) '$(srcdir)/PortTest.cpp'; fi`

test_port-TestingSignalHandler.o: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -MT test_port-TestingSignalHandler.o -MD -MP -MF $(DEPDIR)/test_port-TestingSignalHandler.Tpo -c -o test_port-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_port-TestingSignalHandler.Tpo $(DEPDIR)/test_port-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_port-TestingSignalHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -c -o test_port-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp

test_port-TestingSignalHandler.obj: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -MT test_port-TestingSignalHandler.obj -MD -MP -MF $(DEPDIR)/test_port-TestingSignalHandler.Tpo -c -o test_port-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_port-TestingSignalHandler.Tpo $(DEPDIR)/test_port-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_port-TestingSignalHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_port_CXXFLAGS) $(CXXFLAGS) -c -o test_port-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`

test_vm-VMTest.o: VMTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-VMTest.o -MD -MP -MF $(DEPDIR)/test_vm-VMTest.Tpo -c -o test_vm-VMTest.o `test -f 'VMTest.cpp' || echo '$(srcdir)/'`VMTest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-VMTest.Tpo $(DEPDIR)/test_vm-VMTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VMTest.cpp' object='test_vm-VMTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-VMTest.o `test -f 'VMTest.cpp' || echo '$(srcdir)/'`VMTest.cpp

test_vm-VMTest.obj: VMTest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-VMTest.obj -MD -MP -MF $(DEPDIR)/test_vm-VMTest.Tpo -c -o test_vm-VMTest.obj `if test -f 'VMTest.cpp'; then $(CYGPATH_W) 'VMTest.cpp'; else $(CYGPATH_W) '$(srcdir)/VMTest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-VMTest.Tpo $(DEPDIR)/test_vm-VMTest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VMTest.cpp' object='test_vm-VMTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-VMTest.obj `if test -f 'VMTest.cpp'; then $(CYGPATH_W) 'VMTest.cpp'; else $(CYGPATH_W) '$(srcdir)/VMTest.cpp'; fi`

test_vm-TestingVM.o: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-TestingVM.o -MD -MP -MF $(DEPDIR)/test_vm-TestingVM.Tpo -c -o test_vm-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-TestingVM.Tpo $(DEPDIR)/test_vm-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_vm-TestingVM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-TestingVM.o `test -f 'TestingVM.cpp' || echo '$(srcdir)/'`TestingVM.cpp

test_vm-TestingVM.obj: TestingVM.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-TestingVM.obj -MD -MP -MF $(DEPDIR)/test_vm-TestingVM.Tpo -c -o test_vm-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-TestingVM.Tpo $(DEPDIR)/test_vm-TestingVM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingVM.cpp' object='test_vm-TestingVM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-TestingVM.obj `if test -f 'TestingVM.cpp'; then $(CYGPATH_W) 'TestingVM.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingVM.cpp'; fi`

test_vm-TestingSignalHandler.o: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-TestingSignalHandler.o -MD -MP -MF $(DEPDIR)/test_vm-TestingSignalHandler.Tpo -c -o test_vm-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-TestingSignalHandler.Tpo $(DEPDIR)/test_vm-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_vm-TestingSignalHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-TestingSignalHandler.o `test -f 'TestingSignalHandler.cpp' || echo '$(srcdir)/'`TestingSignalHandler.cpp

test_vm-TestingSignalHandler.obj: TestingSignalHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -MT test_vm-TestingSignalHandler.obj -MD -MP -MF $(DEPDIR)/test_vm-TestingSignalHandler.Tpo -c -o test_vm-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_vm-TestingSignalHandler.Tpo $(DEPDIR)/test_vm-TestingSignalHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TestingSignalHandler.cpp' object='test_vm-TestingSignalHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_vm_CXXFLAGS) $(CXXFLAGS) -c -o test_vm-TestingSignalHandler.obj `if test -f 'TestingSignalHandler.cpp'; then $(CYGPATH_W) 'TestingSignalHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/TestingSignalHandler.cpp'; fi`
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done
install-nobase_dataDATA: $(nobase_data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(MKDIR_P) "$(DESTDIR)$(datadir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(nobase_dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-nobase_dataDATA:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_data_DATA)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)" "$(DESTDIR)$(datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dataDATA install-nobase_dataDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dataDATA uninstall-nobase_dataDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-data-am install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES ctags ctags-recursive dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-data-hook \
	install-dataDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_dataDATA \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS uninstall-dataDATA \
	uninstall-nobase_dataDATA


# for FFI test
libffitest.so.1.0: ffitest.c
	$(CC) -fPIC -c $<
	$(CC) -Wl @SHLIB_SO_LDFLAGS@ -o $@ ffitest.o

#  N.B. We don't use backend's (gensym) for following reasons.
#   (a) When we read serialize libraries, we need all symbols are interned.
#       Because symbols who have same string should be eq?, even when they are loaded from separate files.

#   (b) When we precompile system libraries, we want to control the start index of gensym.
#       Since we should avoid index overlapping between pre-compile libraries and pre-compiled psyntax.
#       So using environment variable MOSH_GENSYM_PREFIX, we control the prefix.
update:
	(find . -name "*.ss.fasl" | xargs rm) ; true
	(find . -name "*.sls.fasl" | xargs rm) ; true
	MOSH_GENSYM_PREFIX=L ./mosh scripts/pre-compile-r6rs.scm scripts/pre-compile-target.scm

# when you release comment out start
@DEVELOPER_TRUE@Reader.tab.cpp: Reader.y
@DEVELOPER_TRUE@	bison -d $< -o $@

@DEVELOPER_TRUE@NumberReader.tab.cpp: NumberReader.y
@DEVELOPER_TRUE@	bison -p "number_yy" -d $< -o $@

@DEVELOPER_TRUE@Scanner.cpp : scanner.re
@DEVELOPER_TRUE@	re2c -u $< > $@ # -d is debug option

@DEVELOPER_TRUE@NumberScanner.cpp : NumberScanner.re
@DEVELOPER_TRUE@	re2c -cu $< > $@ # -d is debug option

@DEVELOPER_TRUE@r6rs-test:
@DEVELOPER_TRUE@	(cd r6rs-examples && ../mosh hello.ss)
@DEVELOPER_TRUE@	(cd r6rs-examples && ../mosh let-syntax.ss)
@DEVELOPER_TRUE@	(cd r6rs-examples && ../mosh env.ss)

#### Instruction.h
@DEVELOPER_TRUE@Instruction.h: ./instruction.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-insn.scm $(PWD)/$< > $(PWD)/$@

@DEVELOPER_TRUE@main.cpp: psyntax.h compiler-with-library.h match.h

@DEVELOPER_TRUE@./compiler-vm-cpp.scm: ./compiler.scm free-vars-decl.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-compiler.scm $(PWD)/$< "mosh" > $(PWD)/$@

@DEVELOPER_TRUE@compiler-with-library.scmc: ./compiler-with-library.scm ./compiler-vm.scm
@DEVELOPER_TRUE@	@GOSH@ ./vm.scm compile-file-with-macro $(PWD)/$< > $(PWD)/$@

@DEVELOPER_TRUE@SUFFIXES: .scmc .h

@DEVELOPER_TRUE@.scmc.h:
@DEVELOPER_TRUE@	(cd doc && mosh ../scripts/scmc2fasl.scm $(PWD)/$< $(PWD)/$<.fasl)
@DEVELOPER_TRUE@	(cd doc && mosh ../scripts/binary2c.scm $(PWD)/$<.fasl $(PWD)/$@)

@DEVELOPER_TRUE@match.scmc: ./match.scm ./compiler-vm.scm
@DEVELOPER_TRUE@	@GOSH@ ./vm.scm compile-file-without-macro $(PWD)/$< > $(PWD)/$@

# we need to replace #\null => #\nul and |...| => ...
# It is the difference between gauche and mosh.
@DEVELOPER_TRUE@psyntax.scmc: tools/psyntax-r6rs/rev10_to_10/psyntax.scm ./compiler-vm.scm
@DEVELOPER_TRUE@	@GOSH@ ./vm.scm compile-file-without-macro $(PWD)/$< > $(PWD)/$@
@DEVELOPER_TRUE@	sed -i -e "s/#\\\\null/#\\\\nul/g;s/|\.\.\.|/\.\.\./g" $(PWD)/$@

@DEVELOPER_TRUE@./compiler-with-library.scm: ./library.scm ./compiler-vm-cpp.scm $(CORE_LIBS)
@DEVELOPER_TRUE@	cat $^ > $(PWD)/$@

@DEVELOPER_TRUE@./free-vars-decl.scm: ./free-vars.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-free-vars-decl.scm $(PWD)/$< > $(PWD)/$@

@DEVELOPER_TRUE@./compiler-vm.scm: ./compiler.scm free-vars-decl.scm
@DEVELOPER_TRUE@	./scripts/gen-compiler.scm $(PWD)/$< "vm?" > $(PWD)/$@

@DEVELOPER_TRUE@./compiler-vm-outer.scm: ./compiler.scm free-vars-decl.scm
@DEVELOPER_TRUE@	./scripts/gen-compiler.scm $(PWD)/$< "vm-outer?" > $(PWD)/$@  || (rm -f $(PWD)/$@ && false)

@DEVELOPER_TRUE@./compiler-gauche.scm: ./compiler.scm free-vars-decl.scm
@DEVELOPER_TRUE@	./scripts/gen-compiler.scm $(PWD)/$< "gauche" > $(PWD)/$@  || (rm -f $(PWD)/$@ && false)

@DEVELOPER_TRUE@labels.cpp: ./instruction.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-label.scm $< > $(PWD)/$@

@DEVELOPER_TRUE@DebugInstruction.h: instruction.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-short-insn.scm $(PWD)/$< > $(PWD)/$@

@DEVELOPER_TRUE@VM.cpp: cprocedures.cpp labels.cpp

@DEVELOPER_TRUE@Object.h: Object-accessors.h

@DEVELOPER_TRUE@./cprocedures.cpp: ./free-vars-decl.scm ./scripts/gen-cproc.scm
@DEVELOPER_TRUE@	@GOSH@ ./scripts/gen-cproc.scm > $@

@DEVELOPER_TRUE@all-tests.scm: ./test-data.scm
@DEVELOPER_TRUE@	mosh -5 ./scripts/gen-test.scm $< $@
#	echo 'run -5 scripts/gen-test.scm test-data.scm all-tests.scm ' | gdb ./mosh

@DEVELOPER_TRUE@Object-accessors.h: ./accessors.scm
@DEVELOPER_TRUE@	./mosh ./scripts/gen-accessors.scm > $@

@DEVELOPER_TRUE@doc:
@DEVELOPER_TRUE@	./mosh scripts/gen-doc-from-r6rs.scm
@DEVELOPER_TRUE@	perl ~/NaturalDocs-1.4/NaturalDocs -i . -o HTML doc/html -p doc/config -s pink -xi tools
# 	@GOSH@ ./scripts/gen-doc.scm "manual" "doc/"
# 	@GOSH@ ./scripts/gen-doc-index.scm "top" "doc/"

# when you release comment out end

.PHONY: bench doc test install

bench:
#	@GOSH@ ./scripts/bench.scm > /dev/null
	LANG=C @GOSH@ ./scripts/bench2.scm

#### test
check: test

test: ./mosh all-tests.scm update
	./mosh test/io-error.scm
	./mosh test/input-output-port.scm
	./mosh test/input-port.scm
	./mosh test/output-port.scm
	./mosh test/shell.scm
	./mosh test/record.scm
	./mosh test/condition.scm
	./mosh test/exception.scm
	./mosh test/unicode.scm
	./mosh test/srfi8.scm
	./mosh test/srfi19.scm
	./mosh lib/srfi/%3a64/srfi-64-test.scm
	./mosh test/ffi.scm
	./mosh test/mysql.scm
	./mosh test/clos.scm
	./mosh test/dbi.scm
	./mosh test/srfi-misc.scm
	./mosh -5 all-tests.scm
	(cd r6rs-test-suite && $(MAKE) $@)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_CPPFLAGS_) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_CPPFLAGS_) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

install-data-hook :
	(cd doc &&  MOSH_GENSYM_PREFIX=I ../mosh ../scripts/pre-compile-r6rs.scm ../scripts/pre-compile-target.scm)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
