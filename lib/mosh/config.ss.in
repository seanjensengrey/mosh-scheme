; config.ss - Config
;
;   Copyright (c) 2009  Higepon(Taro Minowa)  <higepon@users.sourceforge.jp>
;
;   Redistribution and use in source and binary forms, with or without
;   modification, are permitted provided that the following conditions
;   are met:
;
;   1. Redistributions of source code must retain the above copyright
;      notice, this list of conditions and the following disclaimer.
;
;   2. Redistributions in binary form must reproduce the above copyright
;      notice, this list of conditions and the following disclaimer in the
;      documentation and/or other materials provided with the distribution.
;
;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
;  $Id: config.ss 621 2008-11-09 06:22:47Z higepon $

#|
    Title: Configuration

    Configuration of installed Mosh.

    library: (mosh config)

    Configuration library
|#

#|
    About: Library load path.

    Mosh loads libraries from following places.
    - current-directory
    - current-directory/lib
    - Default library path. You can get the path using (<get-config> "library-path").

    You can add paths to library load path by command line option or environment.

    See mosh --help.

|#

(library (mosh config)
  (export get-config get-configs)
  (import (only (rnrs) define cond else assoc => car list map lambda
                       quote cadr error caddr quasiquote unquote)
          (only (mosh) standard-library-path)
          (only (system) mosh-cache-dir))


  (define configurations
    `(("library-path" . ("Show core library path." ,(standard-library-path)))
      ("mosh-cache-dir" . ("Show auto-compilation-cache direcotry path" ,(mosh-cache-dir)))
      ("version"      . ("Show version." "0.1.2"))
      ("prefix"       . ("Show prefix." "@prefix@"))))

  #|
      Function: get-config

      Returns a configuration by key.

      Prototype:
      > (get-config key)

      Parameters:

        key - key to configuration.

      Returns:

        Returns a configuration by key.
  |#
  (define (get-config key)
    (cond [(assoc key configurations) => caddr]
          [else (error 'get-config "unknown configuration parameter" key)]))

  #|
      Function: get-configs

      Returns a list of ("key" "explantion of configuration").

      Prototype:
      > (get-configs)

      Returns:

        A a list of (key "explantion of configuration").
  |#
  (define (get-configs)
    (map (lambda (x)
           (list (car x) (cadr x)))
         configurations))

) ;; library (mosh config)
